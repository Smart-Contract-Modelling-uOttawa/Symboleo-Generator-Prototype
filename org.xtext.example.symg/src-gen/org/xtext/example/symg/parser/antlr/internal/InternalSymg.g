/*
 * generated by Xtext 2.22.0
 */
grammar InternalSymg;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.symg.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.symg.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.symg.services.SymgGrammarAccess;

}

@parser::members {

 	private SymgGrammarAccess grammarAccess;

    public InternalSymgParser(TokenStream input, SymgGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SymgGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getDomainKeyword_0());
		}
		(
			(
				lv_domainName_1_0=RULE_ID
				{
					newLeafNode(lv_domainName_1_0, grammarAccess.getModelAccess().getDomainNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"domainName",
						lv_domainName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getDomainConceptsDomainConceptParserRuleCall_2_0_0());
					}
					lv_domainConcepts_2_0=ruleDomainConcept
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"domainConcepts",
							lv_domainConcepts_2_0,
							"org.xtext.example.symg.Symg.DomainConcept");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getModelAccess().getSemicolonKeyword_2_1());
			}
		)+
		otherlv_4='endDomain'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getEndDomainKeyword_3());
		}
		otherlv_5='Contract'
		{
			newLeafNode(otherlv_5, grammarAccess.getModelAccess().getContractKeyword_4());
		}
		(
			(
				lv_contractName_6_0=RULE_ID
				{
					newLeafNode(lv_contractName_6_0, grammarAccess.getModelAccess().getContractNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"contractName",
						lv_contractName_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getModelAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_7_0_0());
					}
					lv_parameters_8_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_8_0,
							"org.xtext.example.symg.Symg.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getModelAccess().getCommaKeyword_7_1());
			}
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_8_0());
				}
				lv_parameters_10_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_10_0,
						"org.xtext.example.symg.Symg.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getModelAccess().getRightParenthesisKeyword_9());
		}
		(
			otherlv_12='Declarations'
			{
				newLeafNode(otherlv_12, grammarAccess.getModelAccess().getDeclarationsKeyword_10_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarParserRuleCall_10_1_0_0());
						}
						lv_declarations_13_0=ruleDeclar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"declarations",
								lv_declarations_13_0,
								"org.xtext.example.symg.Symg.Declar");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_14=';'
				{
					newLeafNode(otherlv_14, grammarAccess.getModelAccess().getSemicolonKeyword_10_1_1());
				}
			)*
		)?
		(
			otherlv_15='Preconditions'
			{
				newLeafNode(otherlv_15, grammarAccess.getModelAccess().getPreconditionsKeyword_11_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getPreconditionsPropositionParserRuleCall_11_1_0_0());
						}
						lv_preconditions_16_0=ruleProposition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"preconditions",
								lv_preconditions_16_0,
								"org.xtext.example.symg.Symg.Proposition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_17=';'
				{
					newLeafNode(otherlv_17, grammarAccess.getModelAccess().getSemicolonKeyword_11_1_1());
				}
			)*
		)?
		(
			otherlv_18='Postconditions'
			{
				newLeafNode(otherlv_18, grammarAccess.getModelAccess().getPostconditionsKeyword_12_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getPostconditionsPropositionParserRuleCall_12_1_0_0());
						}
						lv_postconditions_19_0=ruleProposition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"postconditions",
								lv_postconditions_19_0,
								"org.xtext.example.symg.Symg.Proposition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_20=';'
				{
					newLeafNode(otherlv_20, grammarAccess.getModelAccess().getSemicolonKeyword_12_1_1());
				}
			)*
		)?
		(
			otherlv_21='Obligations'
			{
				newLeafNode(otherlv_21, grammarAccess.getModelAccess().getObligationsKeyword_13_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getObligationsObligationParserRuleCall_13_1_0_0());
						}
						lv_obligations_22_0=ruleObligation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"obligations",
								lv_obligations_22_0,
								"org.xtext.example.symg.Symg.Obligation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_23=';'
				{
					newLeafNode(otherlv_23, grammarAccess.getModelAccess().getSemicolonKeyword_13_1_1());
				}
			)*
		)?
		(
			otherlv_24='Surviving'
			{
				newLeafNode(otherlv_24, grammarAccess.getModelAccess().getSurvivingKeyword_14_0());
			}
			otherlv_25='Obligations'
			{
				newLeafNode(otherlv_25, grammarAccess.getModelAccess().getObligationsKeyword_14_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getSobligationsObligationParserRuleCall_14_2_0_0());
						}
						lv_sobligations_26_0=ruleObligation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"sobligations",
								lv_sobligations_26_0,
								"org.xtext.example.symg.Symg.Obligation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_27=';'
				{
					newLeafNode(otherlv_27, grammarAccess.getModelAccess().getSemicolonKeyword_14_2_1());
				}
			)*
		)?
		(
			otherlv_28='Powers'
			{
				newLeafNode(otherlv_28, grammarAccess.getModelAccess().getPowersKeyword_15_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getPowersPowerParserRuleCall_15_1_0_0());
						}
						lv_powers_29_0=rulePower
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"powers",
								lv_powers_29_0,
								"org.xtext.example.symg.Symg.Power");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_30=';'
				{
					newLeafNode(otherlv_30, grammarAccess.getModelAccess().getSemicolonKeyword_15_1_1());
				}
			)*
		)?
		(
			otherlv_31='Constraints'
			{
				newLeafNode(otherlv_31, grammarAccess.getModelAccess().getConstraintsKeyword_16_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getConstraintsPropositionParserRuleCall_16_1_0_0());
						}
						lv_constraints_32_0=ruleProposition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_32_0,
								"org.xtext.example.symg.Symg.Proposition");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_33=';'
				{
					newLeafNode(otherlv_33, grammarAccess.getModelAccess().getSemicolonKeyword_16_1_1());
				}
			)*
		)?
		otherlv_34='endContract'
		{
			newLeafNode(otherlv_34, grammarAccess.getModelAccess().getEndContractKeyword_17());
		}
	)
;

// Entry rule entryRuleDomainConcept
entryRuleDomainConcept returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainConceptRule()); }
	iv_ruleDomainConcept=ruleDomainConcept
	{ $current=$iv_ruleDomainConcept.current; }
	EOF;

// Rule DomainConcept
ruleDomainConcept returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDomainConceptAccess().getRegularParserRuleCall_0());
		}
		this_Regular_0=ruleRegular
		{
			$current = $this_Regular_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDomainConceptAccess().getEnumerationParserRuleCall_1());
		}
		this_Enumeration_1=ruleEnumeration
		{
			$current = $this_Enumeration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRegular
entryRuleRegular returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRegularRule()); }
	iv_ruleRegular=ruleRegular
	{ $current=$iv_ruleRegular.current; }
	EOF;

// Rule Regular
ruleRegular returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRegularAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRegularRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='isA'
		{
			newLeafNode(otherlv_1, grammarAccess.getRegularAccess().getIsAKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRegularAccess().getConceptTypeCTypeParserRuleCall_2_0());
				}
				lv_conceptType_2_0=ruleCType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRegularRule());
					}
					set(
						$current,
						"conceptType",
						lv_conceptType_2_0,
						"org.xtext.example.symg.Symg.CType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='with'
			{
				newLeafNode(otherlv_3, grammarAccess.getRegularAccess().getWithKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_1_0_0());
						}
						lv_attributes_4_0=ruleAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRegularRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_4_0,
								"org.xtext.example.symg.Symg.Attribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getRegularAccess().getCommaKeyword_3_1_1());
				}
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_2_0());
					}
					lv_attributes_6_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRegularRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_6_0,
							"org.xtext.example.symg.Symg.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getAttributeTypeCTypeParserRuleCall_2_0());
				}
				lv_attributeType_2_0=ruleCType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"attributeType",
						lv_attributeType_2_0,
						"org.xtext.example.symg.Symg.CType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumeration
entryRuleEnumeration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumerationRule()); }
	iv_ruleEnumeration=ruleEnumeration
	{ $current=$iv_ruleEnumeration.current; }
	EOF;

// Rule Enumeration
ruleEnumeration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumerationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='isA'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumerationAccess().getIsAKeyword_1());
		}
		otherlv_2='Enumeration'
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumerationAccess().getEnumerationKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumerationAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_4_0_0());
					}
					lv_enumerationItems_4_0=ruleenumItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumerationRule());
						}
						add(
							$current,
							"enumerationItems",
							lv_enumerationItems_4_0,
							"org.xtext.example.symg.Symg.enumItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getEnumerationAccess().getCommaKeyword_4_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_5_0());
				}
				lv_enumerationItems_6_0=ruleenumItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumerationRule());
					}
					add(
						$current,
						"enumerationItems",
						lv_enumerationItems_6_0,
						"org.xtext.example.symg.Symg.enumItem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getEnumerationAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleenumItem
entryRuleenumItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumItemRule()); }
	iv_ruleenumItem=ruleenumItem
	{ $current=$iv_ruleenumItem.current; }
	EOF;

// Rule enumItem
ruleenumItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumItemAccess().getEnumItemAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleCType
entryRuleCType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCTypeRule()); }
	iv_ruleCType=ruleCType
	{ $current=$iv_ruleCType.current; }
	EOF;

// Rule CType
ruleCType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCTypeAccess().getDomainTypeParserRuleCall_0());
		}
		this_DomainType_0=ruleDomainType
		{
			$current = $this_DomainType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTypeAccess().getOntoCTypeParserRuleCall_1());
		}
		this_OntoCType_1=ruleOntoCType
		{
			$current = $this_OntoCType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCTypeAccess().getBasicTypeParserRuleCall_2());
		}
		this_BasicType_2=ruleBasicType
		{
			$current = $this_BasicType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDomainType
entryRuleDomainType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainTypeRule()); }
	iv_ruleDomainType=ruleDomainType
	{ $current=$iv_ruleDomainType.current; }
	EOF;

// Rule DomainType
ruleDomainType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDomainTypeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getDomainTypeAccess().getSuperTypeDomainConceptCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	iv_ruleBasicType=ruleBasicType
	{ $current=$iv_ruleBasicType.current; }
	EOF;

// Rule BasicType
ruleBasicType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='NUMBER'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getBasicTypeAccess().getNameNUMBERKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='STRING'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getBasicTypeAccess().getNameSTRINGKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='DATE'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getBasicTypeAccess().getNameDATEKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleOntoCType
entryRuleOntoCType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOntoCTypeRule()); }
	iv_ruleOntoCType=ruleOntoCType
	{ $current=$iv_ruleOntoCType.current; }
	EOF;

// Rule OntoCType
ruleOntoCType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='ASSET'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getOntoCTypeAccess().getNameASSETKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOntoCTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='EVENT'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getOntoCTypeAccess().getNameEVENTKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOntoCTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='ROLE'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getOntoCTypeAccess().getNameROLEKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOntoCTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='SITUATION'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getOntoCTypeAccess().getNameSITUATIONKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOntoCTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
				    |
				lv_name_0_5='CONTRACT'
				{
					newLeafNode(lv_name_0_5, grammarAccess.getOntoCTypeAccess().getNameCONTRACTKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOntoCTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeNameParserRuleCall_2_0());
				}
				lv_type_2_0=ruleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.symg.Symg.TypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current; }
	EOF;

// Rule TypeName
ruleTypeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeNameAccess().getDomainTypeParserRuleCall_0());
		}
		this_DomainType_0=ruleDomainType
		{
			$current = $this_DomainType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeNameAccess().getBasicTypeParserRuleCall_1());
		}
		this_BasicType_1=ruleBasicType
		{
			$current = $this_BasicType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeclarPair
entryRuleDeclarPair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarPairRule()); }
	iv_ruleDeclarPair=ruleDeclarPair
	{ $current=$iv_ruleDeclarPair.current; }
	EOF;

// Rule DeclarPair
ruleDeclarPair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_attr_0_0=RULE_ID
				{
					newLeafNode(lv_attr_0_0, grammarAccess.getDeclarPairAccess().getAttrIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarPairRule());
					}
					setWithLastConsumed(
						$current,
						"attr",
						lv_attr_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarPairAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				lv_param_2_0=RULE_ID
				{
					newLeafNode(lv_param_2_0, grammarAccess.getDeclarPairAccess().getParamIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarPairRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDeclar
entryRuleDeclar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarRule()); }
	iv_ruleDeclar=ruleDeclar
	{ $current=$iv_ruleDeclar.current; }
	EOF;

// Rule Declar
ruleDeclar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDeclarAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDeclarAccess().getTypeRegularCrossReference_2_0());
				}
			)
		)
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclarAccess().getWithKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_4_0_0());
					}
					lv_attributes_4_0=ruleDeclarPair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeclarRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_4_0,
							"org.xtext.example.symg.Symg.DeclarPair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDeclarAccess().getCommaKeyword_4_1());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_5_0());
				}
				lv_attributes_6_0=ruleDeclarPair
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_6_0,
						"org.xtext.example.symg.Symg.DeclarPair");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObligation
entryRuleObligation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObligationRule()); }
	iv_ruleObligation=ruleObligation
	{ $current=$iv_ruleObligation.current; }
	EOF;

// Rule Obligation
ruleObligation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getObligationAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObligationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getObligationAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObligationAccess().getTriggerPropositionParserRuleCall_2_0_0());
					}
					lv_trigger_2_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObligationRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_2_0,
							"org.xtext.example.symg.Symg.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='->'
			{
				newLeafNode(otherlv_3, grammarAccess.getObligationAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)?
		otherlv_4='obligation'
		{
			newLeafNode(otherlv_4, grammarAccess.getObligationAccess().getObligationKeyword_3());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getObligationAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_role1_6_0=RULE_ID
				{
					newLeafNode(lv_role1_6_0, grammarAccess.getObligationAccess().getRole1IDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObligationRule());
					}
					setWithLastConsumed(
						$current,
						"role1",
						lv_role1_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getObligationAccess().getCommaKeyword_6());
		}
		(
			(
				lv_role2_8_0=RULE_ID
				{
					newLeafNode(lv_role2_8_0, grammarAccess.getObligationAccess().getRole2IDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObligationRule());
					}
					setWithLastConsumed(
						$current,
						"role2",
						lv_role2_8_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getObligationAccess().getCommaKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObligationAccess().getAntecedentPropositionParserRuleCall_9_0());
				}
				lv_antecedent_10_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObligationRule());
					}
					set(
						$current,
						"antecedent",
						lv_antecedent_10_0,
						"org.xtext.example.symg.Symg.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getObligationAccess().getCommaKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getObligationAccess().getConsequentPropositionParserRuleCall_11_0());
				}
				lv_consequent_12_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getObligationRule());
					}
					set(
						$current,
						"consequent",
						lv_consequent_12_0,
						"org.xtext.example.symg.Symg.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getObligationAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRulePower
entryRulePower returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerRule()); }
	iv_rulePower=rulePower
	{ $current=$iv_rulePower.current; }
	EOF;

// Rule Power
rulePower returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPowerAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPowerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPowerAccess().getColonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getTriggerPropositionParserRuleCall_2_0_0());
					}
					lv_trigger_2_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"trigger",
							lv_trigger_2_0,
							"org.xtext.example.symg.Symg.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='->'
			{
				newLeafNode(otherlv_3, grammarAccess.getPowerAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)?
		otherlv_4='power'
		{
			newLeafNode(otherlv_4, grammarAccess.getPowerAccess().getPowerKeyword_3());
		}
		otherlv_5='('
		{
			newLeafNode(otherlv_5, grammarAccess.getPowerAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_role1_6_0=RULE_ID
				{
					newLeafNode(lv_role1_6_0, grammarAccess.getPowerAccess().getRole1IDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPowerRule());
					}
					setWithLastConsumed(
						$current,
						"role1",
						lv_role1_6_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getPowerAccess().getCommaKeyword_6());
		}
		(
			(
				lv_role2_8_0=RULE_ID
				{
					newLeafNode(lv_role2_8_0, grammarAccess.getPowerAccess().getRole2IDTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPowerRule());
					}
					setWithLastConsumed(
						$current,
						"role2",
						lv_role2_8_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getPowerAccess().getCommaKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowerAccess().getAntecedentPropositionParserRuleCall_9_0());
				}
				lv_antecedent_10_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowerRule());
					}
					set(
						$current,
						"antecedent",
						lv_antecedent_10_0,
						"org.xtext.example.symg.Symg.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getPowerAccess().getCommaKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowerAccess().getConsequentPropositionParserRuleCall_11_0());
				}
				lv_consequent_12_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowerRule());
					}
					set(
						$current,
						"consequent",
						lv_consequent_12_0,
						"org.xtext.example.symg.Symg.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getPowerAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleProposition
entryRuleProposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropositionRule()); }
	iv_ruleProposition=ruleProposition
	{ $current=$iv_ruleProposition.current; }
	EOF;

// Rule Proposition
ruleProposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_0_0());
				}
				lv_junctions_0_0=ruleJunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropositionRule());
					}
					add(
						$current,
						"junctions",
						lv_junctions_0_0,
						"org.xtext.example.symg.Symg.Junction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='OR'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropositionAccess().getORKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_1_1_0());
					}
					lv_junctions_2_0=ruleJunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropositionRule());
						}
						add(
							$current,
							"junctions",
							lv_junctions_2_0,
							"org.xtext.example.symg.Symg.Junction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleJunction
entryRuleJunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJunctionRule()); }
	iv_ruleJunction=ruleJunction
	{ $current=$iv_ruleJunction.current; }
	EOF;

// Rule Junction
ruleJunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_0_0());
				}
				lv_negativeAtoms_0_0=ruleNegation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJunctionRule());
					}
					add(
						$current,
						"negativeAtoms",
						lv_negativeAtoms_0_0,
						"org.xtext.example.symg.Symg.Negation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='AND'
			{
				newLeafNode(otherlv_1, grammarAccess.getJunctionAccess().getANDKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_1_1_0());
					}
					lv_negativeAtoms_2_0=ruleNegation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJunctionRule());
						}
						add(
							$current,
							"negativeAtoms",
							lv_negativeAtoms_2_0,
							"org.xtext.example.symg.Symg.Negation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNegation
entryRuleNegation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNegationRule()); }
	iv_ruleNegation=ruleNegation
	{ $current=$iv_ruleNegation.current; }
	EOF;

// Rule Negation
ruleNegation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_negated_0_0='NOT'
				{
					newLeafNode(lv_negated_0_0, grammarAccess.getNegationAccess().getNegatedNOTKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNegationRule());
					}
					setWithLastConsumed($current, "negated", lv_negated_0_0 != null, "NOT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNegationAccess().getAtomicExpressionAtomParserRuleCall_1_0());
				}
				lv_atomicExpression_1_0=ruleAtom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNegationRule());
					}
					set(
						$current,
						"atomicExpression",
						lv_atomicExpression_1_0,
						"org.xtext.example.symg.Symg.Atom");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtom
entryRuleAtom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomRule()); }
	iv_ruleAtom=ruleAtom
	{ $current=$iv_ruleAtom.current; }
	EOF;

// Rule Atom
ruleAtom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='happens'
			{
				newLeafNode(otherlv_0, grammarAccess.getAtomAccess().getHappensKeyword_0_0());
			}
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getEventPropositionEventPropParserRuleCall_0_2_0());
					}
					lv_eventProposition_2_0=ruleEventProp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"eventProposition",
							lv_eventProposition_2_0,
							"org.xtext.example.symg.Symg.EventProp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getAtomAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			otherlv_4='occurs'
			{
				newLeafNode(otherlv_4, grammarAccess.getAtomAccess().getOccursKeyword_1_0());
			}
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getSituationPropositionSitPropParserRuleCall_1_2_0());
					}
					lv_situationProposition_6_0=ruleSitProp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"situationProposition",
							lv_situationProposition_6_0,
							"org.xtext.example.symg.Symg.SitProp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_3());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getPointPointParserRuleCall_2_0_0());
					}
					lv_point_8_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"point",
							lv_point_8_0,
							"org.xtext.example.symg.Symg.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='within'
			{
				newLeafNode(otherlv_9, grammarAccess.getAtomAccess().getWithinKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomAccess().getIntervalIntervalParserRuleCall_2_2_0());
					}
					lv_interval_10_0=ruleInterval
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomRule());
						}
						set(
							$current,
							"interval",
							lv_interval_10_0,
							"org.xtext.example.symg.Symg.Interval");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_bool_11_0='TRUE'
				{
					newLeafNode(lv_bool_11_0, grammarAccess.getAtomAccess().getBoolTRUEKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomRule());
					}
					setWithLastConsumed($current, "bool", lv_bool_11_0, "TRUE");
				}
			)
		)
		    |
		(
			(
				lv_bool_12_0='FALSE'
				{
					newLeafNode(lv_bool_12_0, grammarAccess.getAtomAccess().getBoolFALSEKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomRule());
					}
					setWithLastConsumed($current, "bool", lv_bool_12_0, "FALSE");
				}
			)
		)
	)
;

// Entry rule entryRuleSitProp
entryRuleSitProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitPropRule()); }
	iv_ruleSitProp=ruleSitProp
	{ $current=$iv_ruleSitProp.current; }
	EOF;

// Rule SitProp
ruleSitProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_situationName_0_0=RULE_ID
					{
						newLeafNode(lv_situationName_0_0, grammarAccess.getSitPropAccess().getSituationNameIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSitPropRule());
						}
						setWithLastConsumed(
							$current,
							"situationName",
							lv_situationName_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getOSituationNameOStateParserRuleCall_0_1_0());
					}
					lv_oSituationName_1_0=ruleoState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"oSituationName",
							lv_oSituationName_1_0,
							"org.xtext.example.symg.Symg.oState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getCSituationNameCStateParserRuleCall_0_2_0());
					}
					lv_cSituationName_2_0=rulecState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"cSituationName",
							lv_cSituationName_2_0,
							"org.xtext.example.symg.Symg.cState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSitPropAccess().getPSituationNamePStateParserRuleCall_0_3_0());
					}
					lv_pSituationName_3_0=rulepState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSitPropRule());
						}
						set(
							$current,
							"pSituationName",
							lv_pSituationName_3_0,
							"org.xtext.example.symg.Symg.pState");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSitPropAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSitPropAccess().getIntervalIntervalParserRuleCall_2_0());
				}
				lv_interval_5_0=ruleInterval
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitPropRule());
					}
					set(
						$current,
						"interval",
						lv_interval_5_0,
						"org.xtext.example.symg.Symg.Interval");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEventProp
entryRuleEventProp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventPropRule()); }
	iv_ruleEventProp=ruleEventProp
	{ $current=$iv_ruleEventProp.current; }
	EOF;

// Rule EventProp
ruleEventProp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEventPropRule());
						}
					}
					otherlv_0=RULE_ID
					{
						newLeafNode(otherlv_0, grammarAccess.getEventPropAccess().getEventNameDeclarCrossReference_0_0_0());
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getOEventNameOEventParserRuleCall_0_1_0());
					}
					lv_oEventName_1_0=ruleoEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"oEventName",
							lv_oEventName_1_0,
							"org.xtext.example.symg.Symg.oEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getCEventNameCEventParserRuleCall_0_2_0());
					}
					lv_cEventName_2_0=rulecEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"cEventName",
							lv_cEventName_2_0,
							"org.xtext.example.symg.Symg.cEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getEventPropAccess().getPEventNamePEventParserRuleCall_0_3_0());
					}
					lv_pEventName_3_0=rulepEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventPropRule());
						}
						set(
							$current,
							"pEventName",
							lv_pEventName_3_0,
							"org.xtext.example.symg.Symg.pEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getEventPropAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventPropAccess().getPointPointParserRuleCall_2_0());
				}
				lv_point_5_0=rulePoint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventPropRule());
					}
					set(
						$current,
						"point",
						lv_point_5_0,
						"org.xtext.example.symg.Symg.Point");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterval
entryRuleInterval returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntervalRule()); }
	iv_ruleInterval=ruleInterval
	{ $current=$iv_ruleInterval.current; }
	EOF;

// Rule Interval
ruleInterval returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_0_0());
				}
				lv_situationName_0_0=ruleSitName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntervalRule());
					}
					set(
						$current,
						"situationName",
						lv_situationName_0_0,
						"org.xtext.example.symg.Symg.SitName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getStartPointParserRuleCall_1_1_0());
					}
					lv_start_2_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"start",
							lv_start_2_0,
							"org.xtext.example.symg.Symg.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getIntervalAccess().getCommaKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getEndPointParserRuleCall_1_3_0());
					}
					lv_end_4_0=rulePoint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"end",
							lv_end_4_0,
							"org.xtext.example.symg.Symg.Point");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_1_4());
			}
		)
		    |
		(
			(
				lv_unnamed_6_0='UNNAMED_INTERVAL'
				{
					newLeafNode(lv_unnamed_6_0, grammarAccess.getIntervalAccess().getUnnamedUNNAMED_INTERVALKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntervalRule());
					}
					setWithLastConsumed($current, "unnamed", lv_unnamed_6_0, "UNNAMED_INTERVAL");
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_3_0_0());
					}
					lv_situationName_7_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"situationName",
							lv_situationName_7_0,
							"org.xtext.example.symg.Symg.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getTempOpTempOpParserRuleCall_3_1_0());
					}
					lv_tempOp_8_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"tempOp",
							lv_tempOp_8_0,
							"org.xtext.example.symg.Symg.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getIntConstIntConstParserRuleCall_3_2_0());
					}
					lv_intConst_9_0=ruleIntConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"intConst",
							lv_intConst_9_0,
							"org.xtext.example.symg.Symg.IntConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIntervalAccess().getUnitUnitParserRuleCall_3_3_0());
					}
					lv_unit_10_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIntervalRule());
						}
						set(
							$current,
							"unit",
							lv_unit_10_0,
							"org.xtext.example.symg.Symg.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSitName
entryRuleSitName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSitNameRule()); }
	iv_ruleSitName=ruleSitName
	{ $current=$iv_ruleSitName.current; }
	EOF;

// Rule SitName
ruleSitName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_SitName_0_0=RULE_ID
				{
					newLeafNode(lv_SitName_0_0, grammarAccess.getSitNameAccess().getSitNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSitNameRule());
					}
					setWithLastConsumed(
						$current,
						"SitName",
						lv_SitName_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getOStateOStateParserRuleCall_1_0());
				}
				lv_oState_1_0=ruleoState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"oState",
						lv_oState_1_0,
						"org.xtext.example.symg.Symg.oState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getPStatePStateParserRuleCall_2_0());
				}
				lv_pState_2_0=rulepState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"pState",
						lv_pState_2_0,
						"org.xtext.example.symg.Symg.pState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getCStateCStateParserRuleCall_3_0());
				}
				lv_cState_3_0=rulecState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"cState",
						lv_cState_3_0,
						"org.xtext.example.symg.Symg.cState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getOEventOEventParserRuleCall_4_0());
				}
				lv_oEvent_4_0=ruleoEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"oEvent",
						lv_oEvent_4_0,
						"org.xtext.example.symg.Symg.oEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getCEventCEventParserRuleCall_5_0());
				}
				lv_cEvent_5_0=rulecEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"cEvent",
						lv_cEvent_5_0,
						"org.xtext.example.symg.Symg.cEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSitNameAccess().getPEventPEventParserRuleCall_6_0());
				}
				lv_pEvent_6_0=rulepEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSitNameRule());
					}
					set(
						$current,
						"pEvent",
						lv_pEvent_6_0,
						"org.xtext.example.symg.Symg.pEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current.getText(); }
	EOF;

// Rule Unit
ruleUnit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='SECONDS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getSECONDSKeyword_0());
		}
		    |
		kw='MINUTES'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getMINUTESKeyword_1());
		}
		    |
		kw='HOURS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getHOURSKeyword_2());
		}
		    |
		kw='DAYS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getDAYSKeyword_3());
		}
		    |
		kw='WEEKS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getWEEKSKeyword_4());
		}
		    |
		kw='MONTHS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getMONTHSKeyword_5());
		}
		    |
		kw='QUARTERS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getQUARTERSKeyword_6());
		}
		    |
		kw='YEARS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getUnitAccess().getYEARSKeyword_7());
		}
	)
;

// Entry rule entryRuleIntConst
entryRuleIntConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntConstRule()); }
	iv_ruleIntConst=ruleIntConst
	{ $current=$iv_ruleIntConst.current; }
	EOF;

// Rule IntConst
ruleIntConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIntConstAccess().getIntConstAction_0(),
					$current);
			}
		)
		(
			(
				lv_Type_1_0=RULE_INT
				{
					newLeafNode(lv_Type_1_0, grammarAccess.getIntConstAccess().getTypeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntConstRule());
					}
					setWithLastConsumed(
						$current,
						"Type",
						lv_Type_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTempOp
entryRuleTempOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTempOpRule()); }
	iv_ruleTempOp=ruleTempOp
	{ $current=$iv_ruleTempOp.current.getText(); }
	EOF;

// Rule TempOp
ruleTempOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BEFORE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getBEFOREKeyword_0());
		}
		    |
		kw='AFTER'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getAFTERKeyword_1());
		}
		    |
		kw='AT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getATKeyword_2());
		}
		    |
		kw='WITHIN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getWITHINKeyword_3());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getPlusSignKeyword_4());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTempOpAccess().getHyphenMinusKeyword_5());
		}
	)
;

// Entry rule entryRulePoint
entryRulePoint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointRule()); }
	iv_rulePoint=rulePoint
	{ $current=$iv_rulePoint.current; }
	EOF;

// Rule Point
rulePoint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_0_0());
				}
				lv_eventName_0_0=ruleSitName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"eventName",
						lv_eventName_0_0,
						"org.xtext.example.symg.Symg.SitName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_unnamed_1_0='UNNAMED_POINT'
				{
					newLeafNode(lv_unnamed_1_0, grammarAccess.getPointAccess().getUnnamedUNNAMED_POINTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointRule());
					}
					setWithLastConsumed($current, "unnamed", lv_unnamed_1_0, "UNNAMED_POINT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_2_0());
				}
				lv_pointConst_2_0=rulePointConst
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPointRule());
					}
					set(
						$current,
						"pointConst",
						lv_pointConst_2_0,
						"org.xtext.example.symg.Symg.PointConst");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_3_0_0());
					}
					lv_pointConst_3_0=rulePointConst
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						set(
							$current,
							"pointConst",
							lv_pointConst_3_0,
							"org.xtext.example.symg.Symg.PointConst");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getUnitUnitParserRuleCall_3_1_0());
					}
					lv_unit_4_0=ruleUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						set(
							$current,
							"unit",
							lv_unit_4_0,
							"org.xtext.example.symg.Symg.Unit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getTempOpTempOpParserRuleCall_3_2_0());
					}
					lv_tempOp_5_0=ruleTempOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						set(
							$current,
							"tempOp",
							lv_tempOp_5_0,
							"org.xtext.example.symg.Symg.TempOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_3_3_0());
					}
					lv_eventName_6_0=ruleSitName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPointRule());
						}
						set(
							$current,
							"eventName",
							lv_eventName_6_0,
							"org.xtext.example.symg.Symg.SitName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulepEvent
entryRulepEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPEventRule()); }
	iv_rulepEvent=rulepEvent
	{ $current=$iv_rulepEvent.current; }
	EOF;

// Rule pEvent
rulepEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPEventAccess().getPowEventPowEventParserRuleCall_0_0());
				}
				lv_powEvent_0_0=rulePowEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPEventRule());
					}
					set(
						$current,
						"powEvent",
						lv_powEvent_0_0,
						"org.xtext.example.symg.Symg.PowEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_powName_2_0=RULE_ID
				{
					newLeafNode(lv_powName_2_0, grammarAccess.getPEventAccess().getPowNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPEventRule());
					}
					setWithLastConsumed(
						$current,
						"powName",
						lv_powName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePowEvent
entryRulePowEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPowEventRule()); }
	iv_rulePowEvent=rulePowEvent
	{ $current=$iv_rulePowEvent.current.getText(); }
	EOF;

// Rule PowEvent
rulePowEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='pTRIGGERED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPTRIGGEREDKeyword_0());
		}
		    |
		kw='pACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPACTIVATEDKeyword_1());
		}
		    |
		kw='pSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPSUSPENDEDKeyword_2());
		}
		    |
		kw='pRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPRESUMEDKeyword_3());
		}
		    |
		kw='pEXERTED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPEXERTEDKeyword_4());
		}
		    |
		kw='pEXPIRED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPEXPIREDKeyword_5());
		}
		    |
		kw='pTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowEventAccess().getPTERMINATEDKeyword_6());
		}
	)
;

// Entry rule entryRulecEvent
entryRulecEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCEventRule()); }
	iv_rulecEvent=rulecEvent
	{ $current=$iv_rulecEvent.current; }
	EOF;

// Rule cEvent
rulecEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCEventAccess().getContrEventContrEventParserRuleCall_0_0());
				}
				lv_contrEvent_0_0=ruleContrEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCEventRule());
					}
					set(
						$current,
						"contrEvent",
						lv_contrEvent_0_0,
						"org.xtext.example.symg.Symg.ContrEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_contrName_2_0=RULE_ID
				{
					newLeafNode(lv_contrName_2_0, grammarAccess.getCEventAccess().getContrNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCEventRule());
					}
					setWithLastConsumed(
						$current,
						"contrName",
						lv_contrName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleContrEvent
entryRuleContrEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContrEventRule()); }
	iv_ruleContrEvent=ruleContrEvent
	{ $current=$iv_ruleContrEvent.current.getText(); }
	EOF;

// Rule ContrEvent
ruleContrEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='cACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCACTIVATEDKeyword_0());
		}
		    |
		kw='cSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCSUSPENDEDKeyword_1());
		}
		    |
		kw='cRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCRESUMEDKeyword_2());
		}
		    |
		kw='cFULFILLED_ACTIVE_OBLS'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCFULFILLED_ACTIVE_OBLSKeyword_3());
		}
		    |
		kw='cREVOKED_PARTY'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCREVOKED_PARTYKeyword_4());
		}
		    |
		kw='cASSIGNED_PARTY'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCASSIGNED_PARTYKeyword_5());
		}
		    |
		kw='cTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrEventAccess().getCTERMINATEDKeyword_6());
		}
	)
;

// Entry rule entryRuleoEvent
entryRuleoEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOEventRule()); }
	iv_ruleoEvent=ruleoEvent
	{ $current=$iv_ruleoEvent.current; }
	EOF;

// Rule oEvent
ruleoEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOEventAccess().getOblEventOblEventParserRuleCall_0_0());
				}
				lv_oblEvent_0_0=ruleOblEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOEventRule());
					}
					set(
						$current,
						"oblEvent",
						lv_oblEvent_0_0,
						"org.xtext.example.symg.Symg.OblEvent");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOEventAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_oblName_2_0=RULE_ID
				{
					newLeafNode(lv_oblName_2_0, grammarAccess.getOEventAccess().getOblNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOEventRule());
					}
					setWithLastConsumed(
						$current,
						"oblName",
						lv_oblName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getOEventAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOblEvent
entryRuleOblEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOblEventRule()); }
	iv_ruleOblEvent=ruleOblEvent
	{ $current=$iv_ruleOblEvent.current.getText(); }
	EOF;

// Rule OblEvent
ruleOblEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='oTRIGGERED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOTRIGGEREDKeyword_0());
		}
		    |
		kw='oACTIVATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOACTIVATEDKeyword_1());
		}
		    |
		kw='oSUSPENDED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOSUSPENDEDKeyword_2());
		}
		    |
		kw='oRESUMED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getORESUMEDKeyword_3());
		}
		    |
		kw='oDISCHARGED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getODISCHARGEDKeyword_4());
		}
		    |
		kw='oEXPIRED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOEXPIREDKeyword_5());
		}
		    |
		kw='oFULFILLED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOFULFILLEDKeyword_6());
		}
		    |
		kw='oVIOLATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOVIOLATEDKeyword_7());
		}
		    |
		kw='oTERMINATED'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblEventAccess().getOTERMINATEDKeyword_8());
		}
	)
;

// Entry rule entryRulePointConst
entryRulePointConst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointConstRule()); }
	iv_rulePointConst=rulePointConst
	{ $current=$iv_rulePointConst.current; }
	EOF;

// Rule PointConst
rulePointConst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPointConstAccess().getPointConstAction_0(),
					$current);
			}
		)
		(
			(
				lv_Type_1_0=RULE_INT
				{
					newLeafNode(lv_Type_1_0, grammarAccess.getPointConstAccess().getTypeINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPointConstRule());
					}
					setWithLastConsumed(
						$current,
						"Type",
						lv_Type_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleoState
entryRuleoState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOStateRule()); }
	iv_ruleoState=ruleoState
	{ $current=$iv_ruleoState.current; }
	EOF;

// Rule oState
ruleoState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOStateAccess().getOblStateOblStateParserRuleCall_0_0());
				}
				lv_oblState_0_0=ruleOblState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOStateRule());
					}
					set(
						$current,
						"oblState",
						lv_oblState_0_0,
						"org.xtext.example.symg.Symg.OblState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getOStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_oblName_2_0=RULE_ID
				{
					newLeafNode(lv_oblName_2_0, grammarAccess.getOStateAccess().getOblNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOStateRule());
					}
					setWithLastConsumed(
						$current,
						"oblName",
						lv_oblName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getOStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOblState
entryRuleOblState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOblStateRule()); }
	iv_ruleOblState=ruleOblState
	{ $current=$iv_ruleOblState.current.getText(); }
	EOF;

// Rule OblState
ruleOblState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='oCREATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOCREATEKeyword_0());
		}
		    |
		kw='oINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOINEFFECTKeyword_1());
		}
		    |
		kw='oSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOSUSPENSIONKeyword_2());
		}
		    |
		kw='oSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='oUNSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOUNSUCCESSFUL_TERMINATIONKeyword_4());
		}
		    |
		kw='oVIOLATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOVIOLATIONKeyword_5());
		}
		    |
		kw='oFULFILLMENT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getOFULFILLMENTKeyword_6());
		}
		    |
		kw='oDISCHARGE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOblStateAccess().getODISCHARGEKeyword_7());
		}
	)
;

// Entry rule entryRulecState
entryRulecState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCStateRule()); }
	iv_rulecState=rulecState
	{ $current=$iv_rulecState.current; }
	EOF;

// Rule cState
rulecState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCStateAccess().getContrStateContrStateParserRuleCall_0_0());
				}
				lv_contrState_0_0=ruleContrState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCStateRule());
					}
					set(
						$current,
						"contrState",
						lv_contrState_0_0,
						"org.xtext.example.symg.Symg.ContrState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_contractName_2_0=RULE_ID
				{
					newLeafNode(lv_contractName_2_0, grammarAccess.getCStateAccess().getContractNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCStateRule());
					}
					setWithLastConsumed(
						$current,
						"contractName",
						lv_contractName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleContrState
entryRuleContrState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContrStateRule()); }
	iv_ruleContrState=ruleContrState
	{ $current=$iv_ruleContrState.current.getText(); }
	EOF;

// Rule ContrState
ruleContrState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='cFORM'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCFORMKeyword_0());
		}
		    |
		kw='cINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCINEFFECTKeyword_1());
		}
		    |
		kw='cSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCSUSPENSIONKeyword_2());
		}
		    |
		kw='cSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='cUNSECCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCUNSECCESSFUL_TERMINATIONKeyword_4());
		}
		    |
		kw='cUNASSIGN'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContrStateAccess().getCUNASSIGNKeyword_5());
		}
	)
;

// Entry rule entryRulepState
entryRulepState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPStateRule()); }
	iv_rulepState=rulepState
	{ $current=$iv_rulepState.current; }
	EOF;

// Rule pState
rulepState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPStateAccess().getPowStatePowStateParserRuleCall_0_0());
				}
				lv_powState_0_0=rulePowState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPStateRule());
					}
					set(
						$current,
						"powState",
						lv_powState_0_0,
						"org.xtext.example.symg.Symg.PowState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPStateAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_powName_2_0=RULE_ID
				{
					newLeafNode(lv_powName_2_0, grammarAccess.getPStateAccess().getPowNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPStateRule());
					}
					setWithLastConsumed(
						$current,
						"powName",
						lv_powName_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPStateAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePowState
entryRulePowState returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPowStateRule()); }
	iv_rulePowState=rulePowState
	{ $current=$iv_rulePowState.current.getText(); }
	EOF;

// Rule PowState
rulePowState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='pCREATE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPCREATEKeyword_0());
		}
		    |
		kw='pINEFFECT'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPINEFFECTKeyword_1());
		}
		    |
		kw='pSUSPENSION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPSUSPENSIONKeyword_2());
		}
		    |
		kw='pSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPSUCCESSFUL_TERMINATIONKeyword_3());
		}
		    |
		kw='pUNSUCCESSFUL_TERMINATION'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPowStateAccess().getPUNSUCCESSFUL_TERMINATIONKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
