/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.symg.symg.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.symg.symg.SitName;
import org.xtext.example.symg.symg.SymgPackage;
import org.xtext.example.symg.symg.cEvent;
import org.xtext.example.symg.symg.cState;
import org.xtext.example.symg.symg.oEvent;
import org.xtext.example.symg.symg.oState;
import org.xtext.example.symg.symg.pEvent;
import org.xtext.example.symg.symg.pState;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sit Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getSitName <em>Sit Name</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getOState <em>OState</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getPState <em>PState</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getCState <em>CState</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getOEvent <em>OEvent</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getCEvent <em>CEvent</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.SitNameImpl#getPEvent <em>PEvent</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SitNameImpl extends MinimalEObjectImpl.Container implements SitName
{
  /**
   * The default value of the '{@link #getSitName() <em>Sit Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSitName()
   * @generated
   * @ordered
   */
  protected static final String SIT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSitName() <em>Sit Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSitName()
   * @generated
   * @ordered
   */
  protected String sitName = SIT_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getOState() <em>OState</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOState()
   * @generated
   * @ordered
   */
  protected oState oState;

  /**
   * The cached value of the '{@link #getPState() <em>PState</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPState()
   * @generated
   * @ordered
   */
  protected pState pState;

  /**
   * The cached value of the '{@link #getCState() <em>CState</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCState()
   * @generated
   * @ordered
   */
  protected cState cState;

  /**
   * The cached value of the '{@link #getOEvent() <em>OEvent</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOEvent()
   * @generated
   * @ordered
   */
  protected oEvent oEvent;

  /**
   * The cached value of the '{@link #getCEvent() <em>CEvent</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCEvent()
   * @generated
   * @ordered
   */
  protected cEvent cEvent;

  /**
   * The cached value of the '{@link #getPEvent() <em>PEvent</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPEvent()
   * @generated
   * @ordered
   */
  protected pEvent pEvent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SitNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymgPackage.Literals.SIT_NAME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSitName()
  {
    return sitName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSitName(String newSitName)
  {
    String oldSitName = sitName;
    sitName = newSitName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__SIT_NAME, oldSitName, sitName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public oState getOState()
  {
    return oState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOState(oState newOState, NotificationChain msgs)
  {
    oState oldOState = oState;
    oState = newOState;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__OSTATE, oldOState, newOState);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOState(oState newOState)
  {
    if (newOState != oState)
    {
      NotificationChain msgs = null;
      if (oState != null)
        msgs = ((InternalEObject)oState).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__OSTATE, null, msgs);
      if (newOState != null)
        msgs = ((InternalEObject)newOState).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__OSTATE, null, msgs);
      msgs = basicSetOState(newOState, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__OSTATE, newOState, newOState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public pState getPState()
  {
    return pState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPState(pState newPState, NotificationChain msgs)
  {
    pState oldPState = pState;
    pState = newPState;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__PSTATE, oldPState, newPState);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPState(pState newPState)
  {
    if (newPState != pState)
    {
      NotificationChain msgs = null;
      if (pState != null)
        msgs = ((InternalEObject)pState).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__PSTATE, null, msgs);
      if (newPState != null)
        msgs = ((InternalEObject)newPState).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__PSTATE, null, msgs);
      msgs = basicSetPState(newPState, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__PSTATE, newPState, newPState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public cState getCState()
  {
    return cState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCState(cState newCState, NotificationChain msgs)
  {
    cState oldCState = cState;
    cState = newCState;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__CSTATE, oldCState, newCState);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCState(cState newCState)
  {
    if (newCState != cState)
    {
      NotificationChain msgs = null;
      if (cState != null)
        msgs = ((InternalEObject)cState).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__CSTATE, null, msgs);
      if (newCState != null)
        msgs = ((InternalEObject)newCState).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__CSTATE, null, msgs);
      msgs = basicSetCState(newCState, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__CSTATE, newCState, newCState));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public oEvent getOEvent()
  {
    return oEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOEvent(oEvent newOEvent, NotificationChain msgs)
  {
    oEvent oldOEvent = oEvent;
    oEvent = newOEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__OEVENT, oldOEvent, newOEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOEvent(oEvent newOEvent)
  {
    if (newOEvent != oEvent)
    {
      NotificationChain msgs = null;
      if (oEvent != null)
        msgs = ((InternalEObject)oEvent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__OEVENT, null, msgs);
      if (newOEvent != null)
        msgs = ((InternalEObject)newOEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__OEVENT, null, msgs);
      msgs = basicSetOEvent(newOEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__OEVENT, newOEvent, newOEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public cEvent getCEvent()
  {
    return cEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCEvent(cEvent newCEvent, NotificationChain msgs)
  {
    cEvent oldCEvent = cEvent;
    cEvent = newCEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__CEVENT, oldCEvent, newCEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCEvent(cEvent newCEvent)
  {
    if (newCEvent != cEvent)
    {
      NotificationChain msgs = null;
      if (cEvent != null)
        msgs = ((InternalEObject)cEvent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__CEVENT, null, msgs);
      if (newCEvent != null)
        msgs = ((InternalEObject)newCEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__CEVENT, null, msgs);
      msgs = basicSetCEvent(newCEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__CEVENT, newCEvent, newCEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public pEvent getPEvent()
  {
    return pEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPEvent(pEvent newPEvent, NotificationChain msgs)
  {
    pEvent oldPEvent = pEvent;
    pEvent = newPEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__PEVENT, oldPEvent, newPEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPEvent(pEvent newPEvent)
  {
    if (newPEvent != pEvent)
    {
      NotificationChain msgs = null;
      if (pEvent != null)
        msgs = ((InternalEObject)pEvent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__PEVENT, null, msgs);
      if (newPEvent != null)
        msgs = ((InternalEObject)newPEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.SIT_NAME__PEVENT, null, msgs);
      msgs = basicSetPEvent(newPEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.SIT_NAME__PEVENT, newPEvent, newPEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymgPackage.SIT_NAME__OSTATE:
        return basicSetOState(null, msgs);
      case SymgPackage.SIT_NAME__PSTATE:
        return basicSetPState(null, msgs);
      case SymgPackage.SIT_NAME__CSTATE:
        return basicSetCState(null, msgs);
      case SymgPackage.SIT_NAME__OEVENT:
        return basicSetOEvent(null, msgs);
      case SymgPackage.SIT_NAME__CEVENT:
        return basicSetCEvent(null, msgs);
      case SymgPackage.SIT_NAME__PEVENT:
        return basicSetPEvent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymgPackage.SIT_NAME__SIT_NAME:
        return getSitName();
      case SymgPackage.SIT_NAME__OSTATE:
        return getOState();
      case SymgPackage.SIT_NAME__PSTATE:
        return getPState();
      case SymgPackage.SIT_NAME__CSTATE:
        return getCState();
      case SymgPackage.SIT_NAME__OEVENT:
        return getOEvent();
      case SymgPackage.SIT_NAME__CEVENT:
        return getCEvent();
      case SymgPackage.SIT_NAME__PEVENT:
        return getPEvent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymgPackage.SIT_NAME__SIT_NAME:
        setSitName((String)newValue);
        return;
      case SymgPackage.SIT_NAME__OSTATE:
        setOState((oState)newValue);
        return;
      case SymgPackage.SIT_NAME__PSTATE:
        setPState((pState)newValue);
        return;
      case SymgPackage.SIT_NAME__CSTATE:
        setCState((cState)newValue);
        return;
      case SymgPackage.SIT_NAME__OEVENT:
        setOEvent((oEvent)newValue);
        return;
      case SymgPackage.SIT_NAME__CEVENT:
        setCEvent((cEvent)newValue);
        return;
      case SymgPackage.SIT_NAME__PEVENT:
        setPEvent((pEvent)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.SIT_NAME__SIT_NAME:
        setSitName(SIT_NAME_EDEFAULT);
        return;
      case SymgPackage.SIT_NAME__OSTATE:
        setOState((oState)null);
        return;
      case SymgPackage.SIT_NAME__PSTATE:
        setPState((pState)null);
        return;
      case SymgPackage.SIT_NAME__CSTATE:
        setCState((cState)null);
        return;
      case SymgPackage.SIT_NAME__OEVENT:
        setOEvent((oEvent)null);
        return;
      case SymgPackage.SIT_NAME__CEVENT:
        setCEvent((cEvent)null);
        return;
      case SymgPackage.SIT_NAME__PEVENT:
        setPEvent((pEvent)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.SIT_NAME__SIT_NAME:
        return SIT_NAME_EDEFAULT == null ? sitName != null : !SIT_NAME_EDEFAULT.equals(sitName);
      case SymgPackage.SIT_NAME__OSTATE:
        return oState != null;
      case SymgPackage.SIT_NAME__PSTATE:
        return pState != null;
      case SymgPackage.SIT_NAME__CSTATE:
        return cState != null;
      case SymgPackage.SIT_NAME__OEVENT:
        return oEvent != null;
      case SymgPackage.SIT_NAME__CEVENT:
        return cEvent != null;
      case SymgPackage.SIT_NAME__PEVENT:
        return pEvent != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (SitName: ");
    result.append(sitName);
    result.append(')');
    return result.toString();
  }

} //SitNameImpl
