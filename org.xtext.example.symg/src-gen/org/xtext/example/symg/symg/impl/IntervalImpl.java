/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.symg.symg.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.symg.symg.IntConst;
import org.xtext.example.symg.symg.Interval;
import org.xtext.example.symg.symg.Point;
import org.xtext.example.symg.symg.SitName;
import org.xtext.example.symg.symg.SymgPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Interval</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getSituationName <em>Situation Name</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getStart <em>Start</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getEnd <em>End</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getUnnamed <em>Unnamed</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getIntConst <em>Int Const</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getUnit <em>Unit</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.IntervalImpl#getTempOp <em>Temp Op</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IntervalImpl extends MinimalEObjectImpl.Container implements Interval
{
  /**
   * The cached value of the '{@link #getSituationName() <em>Situation Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSituationName()
   * @generated
   * @ordered
   */
  protected SitName situationName;

  /**
   * The cached value of the '{@link #getStart() <em>Start</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart()
   * @generated
   * @ordered
   */
  protected Point start;

  /**
   * The cached value of the '{@link #getEnd() <em>End</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnd()
   * @generated
   * @ordered
   */
  protected Point end;

  /**
   * The default value of the '{@link #getUnnamed() <em>Unnamed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnnamed()
   * @generated
   * @ordered
   */
  protected static final String UNNAMED_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnnamed() <em>Unnamed</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnnamed()
   * @generated
   * @ordered
   */
  protected String unnamed = UNNAMED_EDEFAULT;

  /**
   * The cached value of the '{@link #getIntConst() <em>Int Const</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntConst()
   * @generated
   * @ordered
   */
  protected IntConst intConst;

  /**
   * The default value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected static final String UNIT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnit() <em>Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnit()
   * @generated
   * @ordered
   */
  protected String unit = UNIT_EDEFAULT;

  /**
   * The default value of the '{@link #getTempOp() <em>Temp Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTempOp()
   * @generated
   * @ordered
   */
  protected static final String TEMP_OP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTempOp() <em>Temp Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTempOp()
   * @generated
   * @ordered
   */
  protected String tempOp = TEMP_OP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IntervalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymgPackage.Literals.INTERVAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SitName getSituationName()
  {
    return situationName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSituationName(SitName newSituationName, NotificationChain msgs)
  {
    SitName oldSituationName = situationName;
    situationName = newSituationName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__SITUATION_NAME, oldSituationName, newSituationName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSituationName(SitName newSituationName)
  {
    if (newSituationName != situationName)
    {
      NotificationChain msgs = null;
      if (situationName != null)
        msgs = ((InternalEObject)situationName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__SITUATION_NAME, null, msgs);
      if (newSituationName != null)
        msgs = ((InternalEObject)newSituationName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__SITUATION_NAME, null, msgs);
      msgs = basicSetSituationName(newSituationName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__SITUATION_NAME, newSituationName, newSituationName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Point getStart()
  {
    return start;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStart(Point newStart, NotificationChain msgs)
  {
    Point oldStart = start;
    start = newStart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__START, oldStart, newStart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStart(Point newStart)
  {
    if (newStart != start)
    {
      NotificationChain msgs = null;
      if (start != null)
        msgs = ((InternalEObject)start).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__START, null, msgs);
      if (newStart != null)
        msgs = ((InternalEObject)newStart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__START, null, msgs);
      msgs = basicSetStart(newStart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__START, newStart, newStart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Point getEnd()
  {
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEnd(Point newEnd, NotificationChain msgs)
  {
    Point oldEnd = end;
    end = newEnd;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__END, oldEnd, newEnd);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnd(Point newEnd)
  {
    if (newEnd != end)
    {
      NotificationChain msgs = null;
      if (end != null)
        msgs = ((InternalEObject)end).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__END, null, msgs);
      if (newEnd != null)
        msgs = ((InternalEObject)newEnd).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__END, null, msgs);
      msgs = basicSetEnd(newEnd, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__END, newEnd, newEnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUnnamed()
  {
    return unnamed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnnamed(String newUnnamed)
  {
    String oldUnnamed = unnamed;
    unnamed = newUnnamed;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__UNNAMED, oldUnnamed, unnamed));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntConst getIntConst()
  {
    return intConst;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIntConst(IntConst newIntConst, NotificationChain msgs)
  {
    IntConst oldIntConst = intConst;
    intConst = newIntConst;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__INT_CONST, oldIntConst, newIntConst);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntConst(IntConst newIntConst)
  {
    if (newIntConst != intConst)
    {
      NotificationChain msgs = null;
      if (intConst != null)
        msgs = ((InternalEObject)intConst).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__INT_CONST, null, msgs);
      if (newIntConst != null)
        msgs = ((InternalEObject)newIntConst).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SymgPackage.INTERVAL__INT_CONST, null, msgs);
      msgs = basicSetIntConst(newIntConst, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__INT_CONST, newIntConst, newIntConst));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getUnit()
  {
    return unit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUnit(String newUnit)
  {
    String oldUnit = unit;
    unit = newUnit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__UNIT, oldUnit, unit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTempOp()
  {
    return tempOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTempOp(String newTempOp)
  {
    String oldTempOp = tempOp;
    tempOp = newTempOp;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.INTERVAL__TEMP_OP, oldTempOp, tempOp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymgPackage.INTERVAL__SITUATION_NAME:
        return basicSetSituationName(null, msgs);
      case SymgPackage.INTERVAL__START:
        return basicSetStart(null, msgs);
      case SymgPackage.INTERVAL__END:
        return basicSetEnd(null, msgs);
      case SymgPackage.INTERVAL__INT_CONST:
        return basicSetIntConst(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymgPackage.INTERVAL__SITUATION_NAME:
        return getSituationName();
      case SymgPackage.INTERVAL__START:
        return getStart();
      case SymgPackage.INTERVAL__END:
        return getEnd();
      case SymgPackage.INTERVAL__UNNAMED:
        return getUnnamed();
      case SymgPackage.INTERVAL__INT_CONST:
        return getIntConst();
      case SymgPackage.INTERVAL__UNIT:
        return getUnit();
      case SymgPackage.INTERVAL__TEMP_OP:
        return getTempOp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymgPackage.INTERVAL__SITUATION_NAME:
        setSituationName((SitName)newValue);
        return;
      case SymgPackage.INTERVAL__START:
        setStart((Point)newValue);
        return;
      case SymgPackage.INTERVAL__END:
        setEnd((Point)newValue);
        return;
      case SymgPackage.INTERVAL__UNNAMED:
        setUnnamed((String)newValue);
        return;
      case SymgPackage.INTERVAL__INT_CONST:
        setIntConst((IntConst)newValue);
        return;
      case SymgPackage.INTERVAL__UNIT:
        setUnit((String)newValue);
        return;
      case SymgPackage.INTERVAL__TEMP_OP:
        setTempOp((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.INTERVAL__SITUATION_NAME:
        setSituationName((SitName)null);
        return;
      case SymgPackage.INTERVAL__START:
        setStart((Point)null);
        return;
      case SymgPackage.INTERVAL__END:
        setEnd((Point)null);
        return;
      case SymgPackage.INTERVAL__UNNAMED:
        setUnnamed(UNNAMED_EDEFAULT);
        return;
      case SymgPackage.INTERVAL__INT_CONST:
        setIntConst((IntConst)null);
        return;
      case SymgPackage.INTERVAL__UNIT:
        setUnit(UNIT_EDEFAULT);
        return;
      case SymgPackage.INTERVAL__TEMP_OP:
        setTempOp(TEMP_OP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.INTERVAL__SITUATION_NAME:
        return situationName != null;
      case SymgPackage.INTERVAL__START:
        return start != null;
      case SymgPackage.INTERVAL__END:
        return end != null;
      case SymgPackage.INTERVAL__UNNAMED:
        return UNNAMED_EDEFAULT == null ? unnamed != null : !UNNAMED_EDEFAULT.equals(unnamed);
      case SymgPackage.INTERVAL__INT_CONST:
        return intConst != null;
      case SymgPackage.INTERVAL__UNIT:
        return UNIT_EDEFAULT == null ? unit != null : !UNIT_EDEFAULT.equals(unit);
      case SymgPackage.INTERVAL__TEMP_OP:
        return TEMP_OP_EDEFAULT == null ? tempOp != null : !TEMP_OP_EDEFAULT.equals(tempOp);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (unnamed: ");
    result.append(unnamed);
    result.append(", unit: ");
    result.append(unit);
    result.append(", tempOp: ");
    result.append(tempOp);
    result.append(')');
    return result.toString();
  }

} //IntervalImpl
