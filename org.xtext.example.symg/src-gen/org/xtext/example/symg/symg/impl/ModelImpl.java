/**
 * generated by Xtext 2.22.0
 */
package org.xtext.example.symg.symg.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.symg.symg.Declar;
import org.xtext.example.symg.symg.DomainConcept;
import org.xtext.example.symg.symg.Model;
import org.xtext.example.symg.symg.Obligation;
import org.xtext.example.symg.symg.Parameter;
import org.xtext.example.symg.symg.Power;
import org.xtext.example.symg.symg.Proposition;
import org.xtext.example.symg.symg.SymgPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getDomainName <em>Domain Name</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getDomainConcepts <em>Domain Concepts</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getContractName <em>Contract Name</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getParameters <em>Parameters</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getDeclarations <em>Declarations</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getPreconditions <em>Preconditions</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getPostconditions <em>Postconditions</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getObligations <em>Obligations</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getSobligations <em>Sobligations</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getPowers <em>Powers</em>}</li>
 *   <li>{@link org.xtext.example.symg.symg.impl.ModelImpl#getConstraints <em>Constraints</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The default value of the '{@link #getDomainName() <em>Domain Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainName()
   * @generated
   * @ordered
   */
  protected static final String DOMAIN_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDomainName() <em>Domain Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainName()
   * @generated
   * @ordered
   */
  protected String domainName = DOMAIN_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDomainConcepts() <em>Domain Concepts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainConcepts()
   * @generated
   * @ordered
   */
  protected EList<DomainConcept> domainConcepts;

  /**
   * The default value of the '{@link #getContractName() <em>Contract Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContractName()
   * @generated
   * @ordered
   */
  protected static final String CONTRACT_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContractName() <em>Contract Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContractName()
   * @generated
   * @ordered
   */
  protected String contractName = CONTRACT_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParameters() <em>Parameters</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameters()
   * @generated
   * @ordered
   */
  protected EList<Parameter> parameters;

  /**
   * The cached value of the '{@link #getDeclarations() <em>Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclarations()
   * @generated
   * @ordered
   */
  protected EList<Declar> declarations;

  /**
   * The cached value of the '{@link #getPreconditions() <em>Preconditions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreconditions()
   * @generated
   * @ordered
   */
  protected EList<Proposition> preconditions;

  /**
   * The cached value of the '{@link #getPostconditions() <em>Postconditions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPostconditions()
   * @generated
   * @ordered
   */
  protected EList<Proposition> postconditions;

  /**
   * The cached value of the '{@link #getObligations() <em>Obligations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObligations()
   * @generated
   * @ordered
   */
  protected EList<Obligation> obligations;

  /**
   * The cached value of the '{@link #getSobligations() <em>Sobligations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSobligations()
   * @generated
   * @ordered
   */
  protected EList<Obligation> sobligations;

  /**
   * The cached value of the '{@link #getPowers() <em>Powers</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPowers()
   * @generated
   * @ordered
   */
  protected EList<Power> powers;

  /**
   * The cached value of the '{@link #getConstraints() <em>Constraints</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstraints()
   * @generated
   * @ordered
   */
  protected EList<Proposition> constraints;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SymgPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDomainName()
  {
    return domainName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDomainName(String newDomainName)
  {
    String oldDomainName = domainName;
    domainName = newDomainName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.MODEL__DOMAIN_NAME, oldDomainName, domainName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DomainConcept> getDomainConcepts()
  {
    if (domainConcepts == null)
    {
      domainConcepts = new EObjectContainmentEList<DomainConcept>(DomainConcept.class, this, SymgPackage.MODEL__DOMAIN_CONCEPTS);
    }
    return domainConcepts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getContractName()
  {
    return contractName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContractName(String newContractName)
  {
    String oldContractName = contractName;
    contractName = newContractName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SymgPackage.MODEL__CONTRACT_NAME, oldContractName, contractName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getParameters()
  {
    if (parameters == null)
    {
      parameters = new EObjectContainmentEList<Parameter>(Parameter.class, this, SymgPackage.MODEL__PARAMETERS);
    }
    return parameters;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Declar> getDeclarations()
  {
    if (declarations == null)
    {
      declarations = new EObjectContainmentEList<Declar>(Declar.class, this, SymgPackage.MODEL__DECLARATIONS);
    }
    return declarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Proposition> getPreconditions()
  {
    if (preconditions == null)
    {
      preconditions = new EObjectContainmentEList<Proposition>(Proposition.class, this, SymgPackage.MODEL__PRECONDITIONS);
    }
    return preconditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Proposition> getPostconditions()
  {
    if (postconditions == null)
    {
      postconditions = new EObjectContainmentEList<Proposition>(Proposition.class, this, SymgPackage.MODEL__POSTCONDITIONS);
    }
    return postconditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Obligation> getObligations()
  {
    if (obligations == null)
    {
      obligations = new EObjectContainmentEList<Obligation>(Obligation.class, this, SymgPackage.MODEL__OBLIGATIONS);
    }
    return obligations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Obligation> getSobligations()
  {
    if (sobligations == null)
    {
      sobligations = new EObjectContainmentEList<Obligation>(Obligation.class, this, SymgPackage.MODEL__SOBLIGATIONS);
    }
    return sobligations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Power> getPowers()
  {
    if (powers == null)
    {
      powers = new EObjectContainmentEList<Power>(Power.class, this, SymgPackage.MODEL__POWERS);
    }
    return powers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Proposition> getConstraints()
  {
    if (constraints == null)
    {
      constraints = new EObjectContainmentEList<Proposition>(Proposition.class, this, SymgPackage.MODEL__CONSTRAINTS);
    }
    return constraints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SymgPackage.MODEL__DOMAIN_CONCEPTS:
        return ((InternalEList<?>)getDomainConcepts()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__PARAMETERS:
        return ((InternalEList<?>)getParameters()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__DECLARATIONS:
        return ((InternalEList<?>)getDeclarations()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__PRECONDITIONS:
        return ((InternalEList<?>)getPreconditions()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__POSTCONDITIONS:
        return ((InternalEList<?>)getPostconditions()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__OBLIGATIONS:
        return ((InternalEList<?>)getObligations()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__SOBLIGATIONS:
        return ((InternalEList<?>)getSobligations()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__POWERS:
        return ((InternalEList<?>)getPowers()).basicRemove(otherEnd, msgs);
      case SymgPackage.MODEL__CONSTRAINTS:
        return ((InternalEList<?>)getConstraints()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SymgPackage.MODEL__DOMAIN_NAME:
        return getDomainName();
      case SymgPackage.MODEL__DOMAIN_CONCEPTS:
        return getDomainConcepts();
      case SymgPackage.MODEL__CONTRACT_NAME:
        return getContractName();
      case SymgPackage.MODEL__PARAMETERS:
        return getParameters();
      case SymgPackage.MODEL__DECLARATIONS:
        return getDeclarations();
      case SymgPackage.MODEL__PRECONDITIONS:
        return getPreconditions();
      case SymgPackage.MODEL__POSTCONDITIONS:
        return getPostconditions();
      case SymgPackage.MODEL__OBLIGATIONS:
        return getObligations();
      case SymgPackage.MODEL__SOBLIGATIONS:
        return getSobligations();
      case SymgPackage.MODEL__POWERS:
        return getPowers();
      case SymgPackage.MODEL__CONSTRAINTS:
        return getConstraints();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SymgPackage.MODEL__DOMAIN_NAME:
        setDomainName((String)newValue);
        return;
      case SymgPackage.MODEL__DOMAIN_CONCEPTS:
        getDomainConcepts().clear();
        getDomainConcepts().addAll((Collection<? extends DomainConcept>)newValue);
        return;
      case SymgPackage.MODEL__CONTRACT_NAME:
        setContractName((String)newValue);
        return;
      case SymgPackage.MODEL__PARAMETERS:
        getParameters().clear();
        getParameters().addAll((Collection<? extends Parameter>)newValue);
        return;
      case SymgPackage.MODEL__DECLARATIONS:
        getDeclarations().clear();
        getDeclarations().addAll((Collection<? extends Declar>)newValue);
        return;
      case SymgPackage.MODEL__PRECONDITIONS:
        getPreconditions().clear();
        getPreconditions().addAll((Collection<? extends Proposition>)newValue);
        return;
      case SymgPackage.MODEL__POSTCONDITIONS:
        getPostconditions().clear();
        getPostconditions().addAll((Collection<? extends Proposition>)newValue);
        return;
      case SymgPackage.MODEL__OBLIGATIONS:
        getObligations().clear();
        getObligations().addAll((Collection<? extends Obligation>)newValue);
        return;
      case SymgPackage.MODEL__SOBLIGATIONS:
        getSobligations().clear();
        getSobligations().addAll((Collection<? extends Obligation>)newValue);
        return;
      case SymgPackage.MODEL__POWERS:
        getPowers().clear();
        getPowers().addAll((Collection<? extends Power>)newValue);
        return;
      case SymgPackage.MODEL__CONSTRAINTS:
        getConstraints().clear();
        getConstraints().addAll((Collection<? extends Proposition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.MODEL__DOMAIN_NAME:
        setDomainName(DOMAIN_NAME_EDEFAULT);
        return;
      case SymgPackage.MODEL__DOMAIN_CONCEPTS:
        getDomainConcepts().clear();
        return;
      case SymgPackage.MODEL__CONTRACT_NAME:
        setContractName(CONTRACT_NAME_EDEFAULT);
        return;
      case SymgPackage.MODEL__PARAMETERS:
        getParameters().clear();
        return;
      case SymgPackage.MODEL__DECLARATIONS:
        getDeclarations().clear();
        return;
      case SymgPackage.MODEL__PRECONDITIONS:
        getPreconditions().clear();
        return;
      case SymgPackage.MODEL__POSTCONDITIONS:
        getPostconditions().clear();
        return;
      case SymgPackage.MODEL__OBLIGATIONS:
        getObligations().clear();
        return;
      case SymgPackage.MODEL__SOBLIGATIONS:
        getSobligations().clear();
        return;
      case SymgPackage.MODEL__POWERS:
        getPowers().clear();
        return;
      case SymgPackage.MODEL__CONSTRAINTS:
        getConstraints().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SymgPackage.MODEL__DOMAIN_NAME:
        return DOMAIN_NAME_EDEFAULT == null ? domainName != null : !DOMAIN_NAME_EDEFAULT.equals(domainName);
      case SymgPackage.MODEL__DOMAIN_CONCEPTS:
        return domainConcepts != null && !domainConcepts.isEmpty();
      case SymgPackage.MODEL__CONTRACT_NAME:
        return CONTRACT_NAME_EDEFAULT == null ? contractName != null : !CONTRACT_NAME_EDEFAULT.equals(contractName);
      case SymgPackage.MODEL__PARAMETERS:
        return parameters != null && !parameters.isEmpty();
      case SymgPackage.MODEL__DECLARATIONS:
        return declarations != null && !declarations.isEmpty();
      case SymgPackage.MODEL__PRECONDITIONS:
        return preconditions != null && !preconditions.isEmpty();
      case SymgPackage.MODEL__POSTCONDITIONS:
        return postconditions != null && !postconditions.isEmpty();
      case SymgPackage.MODEL__OBLIGATIONS:
        return obligations != null && !obligations.isEmpty();
      case SymgPackage.MODEL__SOBLIGATIONS:
        return sobligations != null && !sobligations.isEmpty();
      case SymgPackage.MODEL__POWERS:
        return powers != null && !powers.isEmpty();
      case SymgPackage.MODEL__CONSTRAINTS:
        return constraints != null && !constraints.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (domainName: ");
    result.append(domainName);
    result.append(", contractName: ");
    result.append(contractName);
    result.append(')');
    return result.toString();
  }

} //ModelImpl
