
#Symboleo Input Properties

domainLoad=\
java Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
endDomain \
 \
Contract meatSaleC (buyer : Buyer, seller : Seller) \
 \
endContract

domainEnum=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
Currency isA Enumeration(CAD, USD, EUR); \
MeatQuality isA Enumeration(PRIME, AAA, AA, A); \
endDomain \
\
Contract meatSaleC (buyer : Buyer, seller : Seller, qlt : MeatQuality, curr : Currency) \
\
endContract

domainWithSuperType=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
Currency isA Enumeration(CAD, USD, EUR); \
MeatQuality isA Enumeration(PRIME, AAA, AA, A); \
PerishableGood isA ASSET with quantity : NUMBER , quality : MeatQuality; \
Meat isA PerishableGood; \
endDomain \
\
Contract meatSaleC (buyer : Buyer, seller : Seller, qnt : NUMBER, qlt : MeatQuality, curr : Currency) \
\
endContract

loadModel=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
Currency isA Enumeration(CAD, USD, EUR); \
MeatQuality isA Enumeration(PRIME, AAA, AA, A); \
PerishableGood isA ASSET with quantity : NUMBER , quality : MeatQuality; \
Meat isA PerishableGood; \
Delivered isA EVENT with item : Meat, deliveryAddress : STRING, delDueD : DATE; \
Paid isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE, payDueD : DATE; \
PaidLate isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE; \
Disclosed isA EVENT with contractID : STRING; \
endDomain \
 \
Contract meatSaleC (buyer : Buyer, seller : Seller, qnt : NUMBER,  \
	qlt : MeatQuality, amt : NUMBER, curr : Currency, payDueDate : DATE,  \
	delAdd : STRING, effDate : DATE, delDueDateDays : NUMBER, intRate : NUMBER) \
 \
endContract

declarations=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
Currency isA Enumeration(CAD, USD, EUR); \
MeatQuality isA Enumeration(PRIME, AAA, AA, A); \
PerishableGood isA ASSET with quantity : NUMBER , quality : MeatQuality; \
Meat isA PerishableGood; \
Delivered isA EVENT with item : Meat, deliveryAddress : STRING, delDueD : DATE; \
Paid isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE, payDueD : DATE; \
PaidLate isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE; \
Disclosed isA EVENT with contractID : STRING; \
endDomain \
\
Contract meatSaleC (buyer : Buyer, seller : Seller, qnt : NUMBER, \
	qlt : MeatQuality, amt : NUMBER, curr : Currency, payDueDate : DATE, \
	delAdd : STRING, effDate : DATE, delDueDateDays : NUMBER, intRate : NUMBER) \
	 \
Declarations \
goods : Meat with quantity := qnt, quality := qlt; \
delivered : Delivered with item := goods, deliveryAddress := delAdd,  \
	delDueD := effDate_plus_delDueDates; \
paid : Paid with amount := amt, currency := curr, from := buyer,  \
	to := seller, payDueD := payDueDate; \
paidLate : PaidLate with amount := amt_plus_interest, currency := curr,  \
	from := buyer, to := seller; \
disclosed : Disclosed with contractID := meatSaleC; \
		 \
endContract

badDeclarationCombinationVariable=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
Buyer isA ROLE with warehouse : STRING; \
Currency isA Enumeration(CAD, USD, EUR); \
MeatQuality isA Enumeration(PRIME, AAA, AA, A); \
PerishableGood isA ASSET with quantity : NUMBER , quality : MeatQuality; \
Meat isA PerishableGood; \
Delivered isA EVENT with item : Meat, deliveryAddress : STRING, delDueD : DATE; \
Paid isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE, payDueD : DATE; \
PaidLate isA EVENT with amount : NUMBER, currency : Currency, from : ROLE, to : ROLE; \
Disclosed isA EVENT with contractID : STRING; \
endDomain \
\
Contract meatSaleC (buyer : Buyer, seller : Seller, qnt : NUMBER, \
	qlt : MeatQuality, amt : NUMBER, curr : Currency, payDueDate : DATE, \
	delAdd : STRING, effDate : DATE, delDueDateDays : NUMBER, intRate : NUMBER) \
	 \
Declarations \
goods : Meat with quantity := qnt, quality := qlt; \
delivered : Delivered with item := goods, deliveryAddress := delAdd,  \
	delDueD := effDate plus delDueDates; \
paid : Paid with amount := amt, currency := curr, from := buyer,  \
	to := seller, payDueD := payDueDate; \
paidLate : PaidLate with amount := amt plus interest, currency := curr,  \
	from := buyer, to := seller; \
disclosed : Disclosed with contractID := meatSaleC; \
		 \
endContract


badDomainRole=\
Domain meatSaleD \
Seller isA ROLE with returnAddress : STRING; \
endDomain \
\
Contract meatSaleC (seller : Seller) \
		 \
endContract

noContractRequirement=\
Domain meatSaleD \
endDomain \
\
Contract meatSaleC () \
		 \
endContract