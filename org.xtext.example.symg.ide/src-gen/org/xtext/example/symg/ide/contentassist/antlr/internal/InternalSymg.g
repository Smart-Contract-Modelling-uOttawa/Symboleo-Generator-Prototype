/*
 * generated by Xtext 2.22.0
 */
grammar InternalSymg;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.symg.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.symg.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.symg.services.SymgGrammarAccess;

}
@parser::members {
	private SymgGrammarAccess grammarAccess;

	public void setGrammarAccess(SymgGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainConcept
entryRuleDomainConcept
:
{ before(grammarAccess.getDomainConceptRule()); }
	 ruleDomainConcept
{ after(grammarAccess.getDomainConceptRule()); } 
	 EOF 
;

// Rule DomainConcept
ruleDomainConcept 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainConceptAccess().getAlternatives()); }
		(rule__DomainConcept__Alternatives)
		{ after(grammarAccess.getDomainConceptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegular
entryRuleRegular
:
{ before(grammarAccess.getRegularRule()); }
	 ruleRegular
{ after(grammarAccess.getRegularRule()); } 
	 EOF 
;

// Rule Regular
ruleRegular 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegularAccess().getGroup()); }
		(rule__Regular__Group__0)
		{ after(grammarAccess.getRegularAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumeration
entryRuleEnumeration
:
{ before(grammarAccess.getEnumerationRule()); }
	 ruleEnumeration
{ after(grammarAccess.getEnumerationRule()); } 
	 EOF 
;

// Rule Enumeration
ruleEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationAccess().getGroup()); }
		(rule__Enumeration__Group__0)
		{ after(grammarAccess.getEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleenumItem
entryRuleenumItem
:
{ before(grammarAccess.getEnumItemRule()); }
	 ruleenumItem
{ after(grammarAccess.getEnumItemRule()); } 
	 EOF 
;

// Rule enumItem
ruleenumItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumItemAccess().getGroup()); }
		(rule__EnumItem__Group__0)
		{ after(grammarAccess.getEnumItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCType
entryRuleCType
:
{ before(grammarAccess.getCTypeRule()); }
	 ruleCType
{ after(grammarAccess.getCTypeRule()); } 
	 EOF 
;

// Rule CType
ruleCType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCTypeAccess().getAlternatives()); }
		(rule__CType__Alternatives)
		{ after(grammarAccess.getCTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainType
entryRuleDomainType
:
{ before(grammarAccess.getDomainTypeRule()); }
	 ruleDomainType
{ after(grammarAccess.getDomainTypeRule()); } 
	 EOF 
;

// Rule DomainType
ruleDomainType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainTypeAccess().getSuperTypeAssignment()); }
		(rule__DomainType__SuperTypeAssignment)
		{ after(grammarAccess.getDomainTypeAccess().getSuperTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicType
entryRuleBasicType
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTypeAccess().getNameAssignment()); }
		(rule__BasicType__NameAssignment)
		{ after(grammarAccess.getBasicTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOntoCType
entryRuleOntoCType
:
{ before(grammarAccess.getOntoCTypeRule()); }
	 ruleOntoCType
{ after(grammarAccess.getOntoCTypeRule()); } 
	 EOF 
;

// Rule OntoCType
ruleOntoCType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameAssignment()); }
		(rule__OntoCType__NameAssignment)
		{ after(grammarAccess.getOntoCTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
		(rule__TypeName__Alternatives)
		{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclarPair
entryRuleDeclarPair
:
{ before(grammarAccess.getDeclarPairRule()); }
	 ruleDeclarPair
{ after(grammarAccess.getDeclarPairRule()); } 
	 EOF 
;

// Rule DeclarPair
ruleDeclarPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarPairAccess().getGroup()); }
		(rule__DeclarPair__Group__0)
		{ after(grammarAccess.getDeclarPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclar
entryRuleDeclar
:
{ before(grammarAccess.getDeclarRule()); }
	 ruleDeclar
{ after(grammarAccess.getDeclarRule()); } 
	 EOF 
;

// Rule Declar
ruleDeclar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarAccess().getGroup()); }
		(rule__Declar__Group__0)
		{ after(grammarAccess.getDeclarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObligation
entryRuleObligation
:
{ before(grammarAccess.getObligationRule()); }
	 ruleObligation
{ after(grammarAccess.getObligationRule()); } 
	 EOF 
;

// Rule Obligation
ruleObligation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObligationAccess().getGroup()); }
		(rule__Obligation__Group__0)
		{ after(grammarAccess.getObligationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePower
entryRulePower
:
{ before(grammarAccess.getPowerRule()); }
	 rulePower
{ after(grammarAccess.getPowerRule()); } 
	 EOF 
;

// Rule Power
rulePower 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowerAccess().getGroup()); }
		(rule__Power__Group__0)
		{ after(grammarAccess.getPowerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposition
entryRuleProposition
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropositionAccess().getGroup()); }
		(rule__Proposition__Group__0)
		{ after(grammarAccess.getPropositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJunction
entryRuleJunction
:
{ before(grammarAccess.getJunctionRule()); }
	 ruleJunction
{ after(grammarAccess.getJunctionRule()); } 
	 EOF 
;

// Rule Junction
ruleJunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJunctionAccess().getGroup()); }
		(rule__Junction__Group__0)
		{ after(grammarAccess.getJunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getGroup()); }
		(rule__Negation__Group__0)
		{ after(grammarAccess.getNegationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtom
entryRuleAtom
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule Atom
ruleAtom 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomAccess().getAlternatives()); }
		(rule__Atom__Alternatives)
		{ after(grammarAccess.getAtomAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSitProp
entryRuleSitProp
:
{ before(grammarAccess.getSitPropRule()); }
	 ruleSitProp
{ after(grammarAccess.getSitPropRule()); } 
	 EOF 
;

// Rule SitProp
ruleSitProp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSitPropAccess().getGroup()); }
		(rule__SitProp__Group__0)
		{ after(grammarAccess.getSitPropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventProp
entryRuleEventProp
:
{ before(grammarAccess.getEventPropRule()); }
	 ruleEventProp
{ after(grammarAccess.getEventPropRule()); } 
	 EOF 
;

// Rule EventProp
ruleEventProp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventPropAccess().getGroup()); }
		(rule__EventProp__Group__0)
		{ after(grammarAccess.getEventPropAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterval
entryRuleInterval
:
{ before(grammarAccess.getIntervalRule()); }
	 ruleInterval
{ after(grammarAccess.getIntervalRule()); } 
	 EOF 
;

// Rule Interval
ruleInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntervalAccess().getAlternatives()); }
		(rule__Interval__Alternatives)
		{ after(grammarAccess.getIntervalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSitName
entryRuleSitName
:
{ before(grammarAccess.getSitNameRule()); }
	 ruleSitName
{ after(grammarAccess.getSitNameRule()); } 
	 EOF 
;

// Rule SitName
ruleSitName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSitNameAccess().getAlternatives()); }
		(rule__SitName__Alternatives)
		{ after(grammarAccess.getSitNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnit
entryRuleUnit
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitAccess().getAlternatives()); }
		(rule__Unit__Alternatives)
		{ after(grammarAccess.getUnitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntConst
entryRuleIntConst
:
{ before(grammarAccess.getIntConstRule()); }
	 ruleIntConst
{ after(grammarAccess.getIntConstRule()); } 
	 EOF 
;

// Rule IntConst
ruleIntConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntConstAccess().getGroup()); }
		(rule__IntConst__Group__0)
		{ after(grammarAccess.getIntConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTempOp
entryRuleTempOp
:
{ before(grammarAccess.getTempOpRule()); }
	 ruleTempOp
{ after(grammarAccess.getTempOpRule()); } 
	 EOF 
;

// Rule TempOp
ruleTempOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTempOpAccess().getAlternatives()); }
		(rule__TempOp__Alternatives)
		{ after(grammarAccess.getTempOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getAlternatives()); }
		(rule__Point__Alternatives)
		{ after(grammarAccess.getPointAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepEvent
entryRulepEvent
:
{ before(grammarAccess.getPEventRule()); }
	 rulepEvent
{ after(grammarAccess.getPEventRule()); } 
	 EOF 
;

// Rule pEvent
rulepEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPEventAccess().getGroup()); }
		(rule__PEvent__Group__0)
		{ after(grammarAccess.getPEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowEvent
entryRulePowEvent
:
{ before(grammarAccess.getPowEventRule()); }
	 rulePowEvent
{ after(grammarAccess.getPowEventRule()); } 
	 EOF 
;

// Rule PowEvent
rulePowEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowEventAccess().getAlternatives()); }
		(rule__PowEvent__Alternatives)
		{ after(grammarAccess.getPowEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecEvent
entryRulecEvent
:
{ before(grammarAccess.getCEventRule()); }
	 rulecEvent
{ after(grammarAccess.getCEventRule()); } 
	 EOF 
;

// Rule cEvent
rulecEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCEventAccess().getGroup()); }
		(rule__CEvent__Group__0)
		{ after(grammarAccess.getCEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContrEvent
entryRuleContrEvent
:
{ before(grammarAccess.getContrEventRule()); }
	 ruleContrEvent
{ after(grammarAccess.getContrEventRule()); } 
	 EOF 
;

// Rule ContrEvent
ruleContrEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContrEventAccess().getAlternatives()); }
		(rule__ContrEvent__Alternatives)
		{ after(grammarAccess.getContrEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoEvent
entryRuleoEvent
:
{ before(grammarAccess.getOEventRule()); }
	 ruleoEvent
{ after(grammarAccess.getOEventRule()); } 
	 EOF 
;

// Rule oEvent
ruleoEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOEventAccess().getGroup()); }
		(rule__OEvent__Group__0)
		{ after(grammarAccess.getOEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOblEvent
entryRuleOblEvent
:
{ before(grammarAccess.getOblEventRule()); }
	 ruleOblEvent
{ after(grammarAccess.getOblEventRule()); } 
	 EOF 
;

// Rule OblEvent
ruleOblEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOblEventAccess().getAlternatives()); }
		(rule__OblEvent__Alternatives)
		{ after(grammarAccess.getOblEventAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointConst
entryRulePointConst
:
{ before(grammarAccess.getPointConstRule()); }
	 rulePointConst
{ after(grammarAccess.getPointConstRule()); } 
	 EOF 
;

// Rule PointConst
rulePointConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointConstAccess().getGroup()); }
		(rule__PointConst__Group__0)
		{ after(grammarAccess.getPointConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoState
entryRuleoState
:
{ before(grammarAccess.getOStateRule()); }
	 ruleoState
{ after(grammarAccess.getOStateRule()); } 
	 EOF 
;

// Rule oState
ruleoState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOStateAccess().getGroup()); }
		(rule__OState__Group__0)
		{ after(grammarAccess.getOStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOblState
entryRuleOblState
:
{ before(grammarAccess.getOblStateRule()); }
	 ruleOblState
{ after(grammarAccess.getOblStateRule()); } 
	 EOF 
;

// Rule OblState
ruleOblState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOblStateAccess().getAlternatives()); }
		(rule__OblState__Alternatives)
		{ after(grammarAccess.getOblStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecState
entryRulecState
:
{ before(grammarAccess.getCStateRule()); }
	 rulecState
{ after(grammarAccess.getCStateRule()); } 
	 EOF 
;

// Rule cState
rulecState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCStateAccess().getGroup()); }
		(rule__CState__Group__0)
		{ after(grammarAccess.getCStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContrState
entryRuleContrState
:
{ before(grammarAccess.getContrStateRule()); }
	 ruleContrState
{ after(grammarAccess.getContrStateRule()); } 
	 EOF 
;

// Rule ContrState
ruleContrState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContrStateAccess().getAlternatives()); }
		(rule__ContrState__Alternatives)
		{ after(grammarAccess.getContrStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepState
entryRulepState
:
{ before(grammarAccess.getPStateRule()); }
	 rulepState
{ after(grammarAccess.getPStateRule()); } 
	 EOF 
;

// Rule pState
rulepState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPStateAccess().getGroup()); }
		(rule__PState__Group__0)
		{ after(grammarAccess.getPStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowState
entryRulePowState
:
{ before(grammarAccess.getPowStateRule()); }
	 rulePowState
{ after(grammarAccess.getPowStateRule()); } 
	 EOF 
;

// Rule PowState
rulePowState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowStateAccess().getAlternatives()); }
		(rule__PowState__Alternatives)
		{ after(grammarAccess.getPowStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainConcept__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainConceptAccess().getRegularParserRuleCall_0()); }
		ruleRegular
		{ after(grammarAccess.getDomainConceptAccess().getRegularParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainConceptAccess().getEnumerationParserRuleCall_1()); }
		ruleEnumeration
		{ after(grammarAccess.getDomainConceptAccess().getEnumerationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCTypeAccess().getDomainTypeParserRuleCall_0()); }
		ruleDomainType
		{ after(grammarAccess.getCTypeAccess().getDomainTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCTypeAccess().getOntoCTypeParserRuleCall_1()); }
		ruleOntoCType
		{ after(grammarAccess.getCTypeAccess().getOntoCTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCTypeAccess().getBasicTypeParserRuleCall_2()); }
		ruleBasicType
		{ after(grammarAccess.getCTypeAccess().getBasicTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getNameNUMBERKeyword_0_0()); }
		'NUMBER'
		{ after(grammarAccess.getBasicTypeAccess().getNameNUMBERKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getNameSTRINGKeyword_0_1()); }
		'STRING'
		{ after(grammarAccess.getBasicTypeAccess().getNameSTRINGKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTypeAccess().getNameDATEKeyword_0_2()); }
		'DATE'
		{ after(grammarAccess.getBasicTypeAccess().getNameDATEKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoCType__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameASSETKeyword_0_0()); }
		'ASSET'
		{ after(grammarAccess.getOntoCTypeAccess().getNameASSETKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameEVENTKeyword_0_1()); }
		'EVENT'
		{ after(grammarAccess.getOntoCTypeAccess().getNameEVENTKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameROLEKeyword_0_2()); }
		'ROLE'
		{ after(grammarAccess.getOntoCTypeAccess().getNameROLEKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameSITUATIONKeyword_0_3()); }
		'SITUATION'
		{ after(grammarAccess.getOntoCTypeAccess().getNameSITUATIONKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameCONTRACTKeyword_0_4()); }
		'CONTRACT'
		{ after(grammarAccess.getOntoCTypeAccess().getNameCONTRACTKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getDomainTypeParserRuleCall_0()); }
		ruleDomainType
		{ after(grammarAccess.getTypeNameAccess().getDomainTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getBasicTypeParserRuleCall_1()); }
		ruleBasicType
		{ after(grammarAccess.getTypeNameAccess().getBasicTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getGroup_0()); }
		(rule__Atom__Group_0__0)
		{ after(grammarAccess.getAtomAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getGroup_1()); }
		(rule__Atom__Group_1__0)
		{ after(grammarAccess.getAtomAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getGroup_2()); }
		(rule__Atom__Group_2__0)
		{ after(grammarAccess.getAtomAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getBoolAssignment_3()); }
		(rule__Atom__BoolAssignment_3)
		{ after(grammarAccess.getAtomAccess().getBoolAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomAccess().getBoolAssignment_4()); }
		(rule__Atom__BoolAssignment_4)
		{ after(grammarAccess.getAtomAccess().getBoolAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getSituationNameAssignment_0_0()); }
		(rule__SitProp__SituationNameAssignment_0_0)
		{ after(grammarAccess.getSitPropAccess().getSituationNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSitPropAccess().getOSituationNameAssignment_0_1()); }
		(rule__SitProp__OSituationNameAssignment_0_1)
		{ after(grammarAccess.getSitPropAccess().getOSituationNameAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSitPropAccess().getCSituationNameAssignment_0_2()); }
		(rule__SitProp__CSituationNameAssignment_0_2)
		{ after(grammarAccess.getSitPropAccess().getCSituationNameAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getSitPropAccess().getPSituationNameAssignment_0_3()); }
		(rule__SitProp__PSituationNameAssignment_0_3)
		{ after(grammarAccess.getSitPropAccess().getPSituationNameAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getEventNameAssignment_0_0()); }
		(rule__EventProp__EventNameAssignment_0_0)
		{ after(grammarAccess.getEventPropAccess().getEventNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventPropAccess().getOEventNameAssignment_0_1()); }
		(rule__EventProp__OEventNameAssignment_0_1)
		{ after(grammarAccess.getEventPropAccess().getOEventNameAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventPropAccess().getCEventNameAssignment_0_2()); }
		(rule__EventProp__CEventNameAssignment_0_2)
		{ after(grammarAccess.getEventPropAccess().getCEventNameAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getEventPropAccess().getPEventNameAssignment_0_3()); }
		(rule__EventProp__PEventNameAssignment_0_3)
		{ after(grammarAccess.getEventPropAccess().getPEventNameAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getSituationNameAssignment_0()); }
		(rule__Interval__SituationNameAssignment_0)
		{ after(grammarAccess.getIntervalAccess().getSituationNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_1()); }
		(rule__Interval__Group_1__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getUnnamedAssignment_2()); }
		(rule__Interval__UnnamedAssignment_2)
		{ after(grammarAccess.getIntervalAccess().getUnnamedAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntervalAccess().getGroup_3()); }
		(rule__Interval__Group_3__0)
		{ after(grammarAccess.getIntervalAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getSitNameAssignment_0()); }
		(rule__SitName__SitNameAssignment_0)
		{ after(grammarAccess.getSitNameAccess().getSitNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getOStateAssignment_1()); }
		(rule__SitName__OStateAssignment_1)
		{ after(grammarAccess.getSitNameAccess().getOStateAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getPStateAssignment_2()); }
		(rule__SitName__PStateAssignment_2)
		{ after(grammarAccess.getSitNameAccess().getPStateAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getCStateAssignment_3()); }
		(rule__SitName__CStateAssignment_3)
		{ after(grammarAccess.getSitNameAccess().getCStateAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getOEventAssignment_4()); }
		(rule__SitName__OEventAssignment_4)
		{ after(grammarAccess.getSitNameAccess().getOEventAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getCEventAssignment_5()); }
		(rule__SitName__CEventAssignment_5)
		{ after(grammarAccess.getSitNameAccess().getCEventAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getSitNameAccess().getPEventAssignment_6()); }
		(rule__SitName__PEventAssignment_6)
		{ after(grammarAccess.getSitNameAccess().getPEventAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitAccess().getSECONDSKeyword_0()); }
		'SECONDS'
		{ after(grammarAccess.getUnitAccess().getSECONDSKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getMINUTESKeyword_1()); }
		'MINUTES'
		{ after(grammarAccess.getUnitAccess().getMINUTESKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getHOURSKeyword_2()); }
		'HOURS'
		{ after(grammarAccess.getUnitAccess().getHOURSKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getDAYSKeyword_3()); }
		'DAYS'
		{ after(grammarAccess.getUnitAccess().getDAYSKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getWEEKSKeyword_4()); }
		'WEEKS'
		{ after(grammarAccess.getUnitAccess().getWEEKSKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getMONTHSKeyword_5()); }
		'MONTHS'
		{ after(grammarAccess.getUnitAccess().getMONTHSKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getQUARTERSKeyword_6()); }
		'QUARTERS'
		{ after(grammarAccess.getUnitAccess().getQUARTERSKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getUnitAccess().getYEARSKeyword_7()); }
		'YEARS'
		{ after(grammarAccess.getUnitAccess().getYEARSKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempOpAccess().getBEFOREKeyword_0()); }
		'BEFORE'
		{ after(grammarAccess.getTempOpAccess().getBEFOREKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTempOpAccess().getAFTERKeyword_1()); }
		'AFTER'
		{ after(grammarAccess.getTempOpAccess().getAFTERKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTempOpAccess().getATKeyword_2()); }
		'AT'
		{ after(grammarAccess.getTempOpAccess().getATKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTempOpAccess().getWITHINKeyword_3()); }
		'WITHIN'
		{ after(grammarAccess.getTempOpAccess().getWITHINKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTempOpAccess().getPlusSignKeyword_4()); }
		'+'
		{ after(grammarAccess.getTempOpAccess().getPlusSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTempOpAccess().getHyphenMinusKeyword_5()); }
		'-'
		{ after(grammarAccess.getTempOpAccess().getHyphenMinusKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getEventNameAssignment_0()); }
		(rule__Point__EventNameAssignment_0)
		{ after(grammarAccess.getPointAccess().getEventNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPointAccess().getUnnamedAssignment_1()); }
		(rule__Point__UnnamedAssignment_1)
		{ after(grammarAccess.getPointAccess().getUnnamedAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPointAccess().getPointConstAssignment_2()); }
		(rule__Point__PointConstAssignment_2)
		{ after(grammarAccess.getPointAccess().getPointConstAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPointAccess().getGroup_3()); }
		(rule__Point__Group_3__0)
		{ after(grammarAccess.getPointAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowEvent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowEventAccess().getPTRIGGEREDKeyword_0()); }
		'pTRIGGERED'
		{ after(grammarAccess.getPowEventAccess().getPTRIGGEREDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPACTIVATEDKeyword_1()); }
		'pACTIVATED'
		{ after(grammarAccess.getPowEventAccess().getPACTIVATEDKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPSUSPENDEDKeyword_2()); }
		'pSUSPENDED'
		{ after(grammarAccess.getPowEventAccess().getPSUSPENDEDKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPRESUMEDKeyword_3()); }
		'pRESUMED'
		{ after(grammarAccess.getPowEventAccess().getPRESUMEDKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPEXERTEDKeyword_4()); }
		'pEXERTED'
		{ after(grammarAccess.getPowEventAccess().getPEXERTEDKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPEXPIREDKeyword_5()); }
		'pEXPIRED'
		{ after(grammarAccess.getPowEventAccess().getPEXPIREDKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getPowEventAccess().getPTERMINATEDKeyword_6()); }
		'pTERMINATED'
		{ after(grammarAccess.getPowEventAccess().getPTERMINATEDKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContrEvent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContrEventAccess().getCACTIVATEDKeyword_0()); }
		'cACTIVATED'
		{ after(grammarAccess.getContrEventAccess().getCACTIVATEDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCSUSPENDEDKeyword_1()); }
		'cSUSPENDED'
		{ after(grammarAccess.getContrEventAccess().getCSUSPENDEDKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCRESUMEDKeyword_2()); }
		'cRESUMED'
		{ after(grammarAccess.getContrEventAccess().getCRESUMEDKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCFULFILLED_ACTIVE_OBLSKeyword_3()); }
		'cFULFILLED_ACTIVE_OBLS'
		{ after(grammarAccess.getContrEventAccess().getCFULFILLED_ACTIVE_OBLSKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCREVOKED_PARTYKeyword_4()); }
		'cREVOKED_PARTY'
		{ after(grammarAccess.getContrEventAccess().getCREVOKED_PARTYKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCASSIGNED_PARTYKeyword_5()); }
		'cASSIGNED_PARTY'
		{ after(grammarAccess.getContrEventAccess().getCASSIGNED_PARTYKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getContrEventAccess().getCTERMINATEDKeyword_6()); }
		'cTERMINATED'
		{ after(grammarAccess.getContrEventAccess().getCTERMINATEDKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OblEvent__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOblEventAccess().getOTRIGGEREDKeyword_0()); }
		'oTRIGGERED'
		{ after(grammarAccess.getOblEventAccess().getOTRIGGEREDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOACTIVATEDKeyword_1()); }
		'oACTIVATED'
		{ after(grammarAccess.getOblEventAccess().getOACTIVATEDKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOSUSPENDEDKeyword_2()); }
		'oSUSPENDED'
		{ after(grammarAccess.getOblEventAccess().getOSUSPENDEDKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getORESUMEDKeyword_3()); }
		'oRESUMED'
		{ after(grammarAccess.getOblEventAccess().getORESUMEDKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getODISCHARGEDKeyword_4()); }
		'oDISCHARGED'
		{ after(grammarAccess.getOblEventAccess().getODISCHARGEDKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOEXPIREDKeyword_5()); }
		'oEXPIRED'
		{ after(grammarAccess.getOblEventAccess().getOEXPIREDKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOFULFILLEDKeyword_6()); }
		'oFULFILLED'
		{ after(grammarAccess.getOblEventAccess().getOFULFILLEDKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOVIOLATEDKeyword_7()); }
		'oVIOLATED'
		{ after(grammarAccess.getOblEventAccess().getOVIOLATEDKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOblEventAccess().getOTERMINATEDKeyword_8()); }
		'oTERMINATED'
		{ after(grammarAccess.getOblEventAccess().getOTERMINATEDKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OblState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOblStateAccess().getOCREATEKeyword_0()); }
		'oCREATE'
		{ after(grammarAccess.getOblStateAccess().getOCREATEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOINEFFECTKeyword_1()); }
		'oINEFFECT'
		{ after(grammarAccess.getOblStateAccess().getOINEFFECTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOSUSPENSIONKeyword_2()); }
		'oSUSPENSION'
		{ after(grammarAccess.getOblStateAccess().getOSUSPENSIONKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOSUCCESSFUL_TERMINATIONKeyword_3()); }
		'oSUCCESSFUL_TERMINATION'
		{ after(grammarAccess.getOblStateAccess().getOSUCCESSFUL_TERMINATIONKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOUNSUCCESSFUL_TERMINATIONKeyword_4()); }
		'oUNSUCCESSFUL_TERMINATION'
		{ after(grammarAccess.getOblStateAccess().getOUNSUCCESSFUL_TERMINATIONKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOVIOLATIONKeyword_5()); }
		'oVIOLATION'
		{ after(grammarAccess.getOblStateAccess().getOVIOLATIONKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getOFULFILLMENTKeyword_6()); }
		'oFULFILLMENT'
		{ after(grammarAccess.getOblStateAccess().getOFULFILLMENTKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOblStateAccess().getODISCHARGEKeyword_7()); }
		'oDISCHARGE'
		{ after(grammarAccess.getOblStateAccess().getODISCHARGEKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContrState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContrStateAccess().getCFORMKeyword_0()); }
		'cFORM'
		{ after(grammarAccess.getContrStateAccess().getCFORMKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getContrStateAccess().getCINEFFECTKeyword_1()); }
		'cINEFFECT'
		{ after(grammarAccess.getContrStateAccess().getCINEFFECTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getContrStateAccess().getCSUSPENSIONKeyword_2()); }
		'cSUSPENSION'
		{ after(grammarAccess.getContrStateAccess().getCSUSPENSIONKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getContrStateAccess().getCSUCCESSFUL_TERMINATIONKeyword_3()); }
		'cSUCCESSFUL_TERMINATION'
		{ after(grammarAccess.getContrStateAccess().getCSUCCESSFUL_TERMINATIONKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getContrStateAccess().getCUNSECCESSFUL_TERMINATIONKeyword_4()); }
		'cUNSECCESSFUL_TERMINATION'
		{ after(grammarAccess.getContrStateAccess().getCUNSECCESSFUL_TERMINATIONKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getContrStateAccess().getCUNASSIGNKeyword_5()); }
		'cUNASSIGN'
		{ after(grammarAccess.getContrStateAccess().getCUNASSIGNKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowStateAccess().getPCREATEKeyword_0()); }
		'pCREATE'
		{ after(grammarAccess.getPowStateAccess().getPCREATEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPowStateAccess().getPINEFFECTKeyword_1()); }
		'pINEFFECT'
		{ after(grammarAccess.getPowStateAccess().getPINEFFECTKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getPowStateAccess().getPSUSPENSIONKeyword_2()); }
		'pSUSPENSION'
		{ after(grammarAccess.getPowStateAccess().getPSUSPENSIONKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getPowStateAccess().getPSUCCESSFUL_TERMINATIONKeyword_3()); }
		'pSUCCESSFUL_TERMINATION'
		{ after(grammarAccess.getPowStateAccess().getPSUCCESSFUL_TERMINATIONKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getPowStateAccess().getPUNSUCCESSFUL_TERMINATIONKeyword_4()); }
		'pUNSUCCESSFUL_TERMINATION'
		{ after(grammarAccess.getPowStateAccess().getPUNSUCCESSFUL_TERMINATIONKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDomainKeyword_0()); }
	'Domain'
	{ after(grammarAccess.getModelAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDomainNameAssignment_1()); }
	(rule__Model__DomainNameAssignment_1)
	{ after(grammarAccess.getModelAccess().getDomainNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getGroup_2()); }
		(rule__Model__Group_2__0)
		{ after(grammarAccess.getModelAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getGroup_2()); }
		(rule__Model__Group_2__0)*
		{ after(grammarAccess.getModelAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEndDomainKeyword_3()); }
	'endDomain'
	{ after(grammarAccess.getModelAccess().getEndDomainKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractKeyword_4()); }
	'Contract'
	{ after(grammarAccess.getModelAccess().getContractKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getContractNameAssignment_5()); }
	(rule__Model__ContractNameAssignment_5)
	{ after(grammarAccess.getModelAccess().getContractNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftParenthesisKeyword_6()); }
	'('
	{ after(grammarAccess.getModelAccess().getLeftParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModelAccess().getGroup_7()); }
		(rule__Model__Group_7__0)
		{ after(grammarAccess.getModelAccess().getGroup_7()); }
	)
	(
		{ before(grammarAccess.getModelAccess().getGroup_7()); }
		(rule__Model__Group_7__0)*
		{ after(grammarAccess.getModelAccess().getGroup_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__8__Impl
	rule__Model__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getParametersAssignment_8()); }
	(rule__Model__ParametersAssignment_8)
	{ after(grammarAccess.getModelAccess().getParametersAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__9__Impl
	rule__Model__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getModelAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__10__Impl
	rule__Model__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_10()); }
	(rule__Model__Group_10__0)?
	{ after(grammarAccess.getModelAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__11__Impl
	rule__Model__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_11()); }
	(rule__Model__Group_11__0)?
	{ after(grammarAccess.getModelAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__12__Impl
	rule__Model__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_12()); }
	(rule__Model__Group_12__0)?
	{ after(grammarAccess.getModelAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__13__Impl
	rule__Model__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_13()); }
	(rule__Model__Group_13__0)?
	{ after(grammarAccess.getModelAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__14__Impl
	rule__Model__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_14()); }
	(rule__Model__Group_14__0)?
	{ after(grammarAccess.getModelAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__15__Impl
	rule__Model__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_15()); }
	(rule__Model__Group_15__0)?
	{ after(grammarAccess.getModelAccess().getGroup_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__16__Impl
	rule__Model__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_16()); }
	(rule__Model__Group_16__0)?
	{ after(grammarAccess.getModelAccess().getGroup_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEndContractKeyword_17()); }
	'endContract'
	{ after(grammarAccess.getModelAccess().getEndContractKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDomainConceptsAssignment_2_0()); }
	(rule__Model__DomainConceptsAssignment_2_0)
	{ after(grammarAccess.getModelAccess().getDomainConceptsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_7__0__Impl
	rule__Model__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getParametersAssignment_7_0()); }
	(rule__Model__ParametersAssignment_7_0)
	{ after(grammarAccess.getModelAccess().getParametersAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommaKeyword_7_1()); }
	','
	{ after(grammarAccess.getModelAccess().getCommaKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_10__0__Impl
	rule__Model__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDeclarationsKeyword_10_0()); }
	'Declarations'
	{ after(grammarAccess.getModelAccess().getDeclarationsKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_10_1()); }
	(rule__Model__Group_10_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_10_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_10_1__0__Impl
	rule__Model__Group_10_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getDeclarationsAssignment_10_1_0()); }
	(rule__Model__DeclarationsAssignment_10_1_0)
	{ after(grammarAccess.getModelAccess().getDeclarationsAssignment_10_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_10_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_10_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_10_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_10_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_11__0__Impl
	rule__Model__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPreconditionsKeyword_11_0()); }
	'Preconditions'
	{ after(grammarAccess.getModelAccess().getPreconditionsKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_11_1()); }
	(rule__Model__Group_11_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_11_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_11_1__0__Impl
	rule__Model__Group_11_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPreconditionsAssignment_11_1_0()); }
	(rule__Model__PreconditionsAssignment_11_1_0)
	{ after(grammarAccess.getModelAccess().getPreconditionsAssignment_11_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_11_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_11_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_11_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_11_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_12__0__Impl
	rule__Model__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPostconditionsKeyword_12_0()); }
	'Postconditions'
	{ after(grammarAccess.getModelAccess().getPostconditionsKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_12_1()); }
	(rule__Model__Group_12_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_12_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_12_1__0__Impl
	rule__Model__Group_12_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPostconditionsAssignment_12_1_0()); }
	(rule__Model__PostconditionsAssignment_12_1_0)
	{ after(grammarAccess.getModelAccess().getPostconditionsAssignment_12_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_12_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_12_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_12_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_12_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_13__0__Impl
	rule__Model__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getObligationsKeyword_13_0()); }
	'Obligations'
	{ after(grammarAccess.getModelAccess().getObligationsKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_13_1()); }
	(rule__Model__Group_13_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_13_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_13_1__0__Impl
	rule__Model__Group_13_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getObligationsAssignment_13_1_0()); }
	(rule__Model__ObligationsAssignment_13_1_0)
	{ after(grammarAccess.getModelAccess().getObligationsAssignment_13_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_13_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_13_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_13_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_13_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_14__0__Impl
	rule__Model__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSurvivingKeyword_14_0()); }
	'Surviving'
	{ after(grammarAccess.getModelAccess().getSurvivingKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_14__1__Impl
	rule__Model__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getObligationsKeyword_14_1()); }
	'Obligations'
	{ after(grammarAccess.getModelAccess().getObligationsKeyword_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_14__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_14_2()); }
	(rule__Model__Group_14_2__0)*
	{ after(grammarAccess.getModelAccess().getGroup_14_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_14_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_14_2__0__Impl
	rule__Model__Group_14_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSobligationsAssignment_14_2_0()); }
	(rule__Model__SobligationsAssignment_14_2_0)
	{ after(grammarAccess.getModelAccess().getSobligationsAssignment_14_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_14_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_14_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_14_2_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_14_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_15__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_15__0__Impl
	rule__Model__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPowersKeyword_15_0()); }
	'Powers'
	{ after(grammarAccess.getModelAccess().getPowersKeyword_15_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_15_1()); }
	(rule__Model__Group_15_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_15_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_15_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_15_1__0__Impl
	rule__Model__Group_15_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPowersAssignment_15_1_0()); }
	(rule__Model__PowersAssignment_15_1_0)
	{ after(grammarAccess.getModelAccess().getPowersAssignment_15_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_15_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_15_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_15_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_15_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_16__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_16__0__Impl
	rule__Model__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConstraintsKeyword_16_0()); }
	'Constraints'
	{ after(grammarAccess.getModelAccess().getConstraintsKeyword_16_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_16__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_16_1()); }
	(rule__Model__Group_16_1__0)*
	{ after(grammarAccess.getModelAccess().getGroup_16_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_16_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_16_1__0__Impl
	rule__Model__Group_16_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConstraintsAssignment_16_1_0()); }
	(rule__Model__ConstraintsAssignment_16_1_0)
	{ after(grammarAccess.getModelAccess().getConstraintsAssignment_16_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_16_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_16_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_16_1_1()); }
	';'
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_16_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Regular__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group__0__Impl
	rule__Regular__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getNameAssignment_0()); }
	(rule__Regular__NameAssignment_0)
	{ after(grammarAccess.getRegularAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group__1__Impl
	rule__Regular__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getIsAKeyword_1()); }
	'isA'
	{ after(grammarAccess.getRegularAccess().getIsAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group__2__Impl
	rule__Regular__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getConceptTypeAssignment_2()); }
	(rule__Regular__ConceptTypeAssignment_2)
	{ after(grammarAccess.getRegularAccess().getConceptTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getGroup_3()); }
	(rule__Regular__Group_3__0)?
	{ after(grammarAccess.getRegularAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Regular__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group_3__0__Impl
	rule__Regular__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getWithKeyword_3_0()); }
	'with'
	{ after(grammarAccess.getRegularAccess().getWithKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group_3__1__Impl
	rule__Regular__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getGroup_3_1()); }
	(rule__Regular__Group_3_1__0)*
	{ after(grammarAccess.getRegularAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getAttributesAssignment_3_2()); }
	(rule__Regular__AttributesAssignment_3_2)
	{ after(grammarAccess.getRegularAccess().getAttributesAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Regular__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group_3_1__0__Impl
	rule__Regular__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getAttributesAssignment_3_1_0()); }
	(rule__Regular__AttributesAssignment_3_1_0)
	{ after(grammarAccess.getRegularAccess().getAttributesAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Regular__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegularAccess().getCommaKeyword_3_1_1()); }
	','
	{ after(grammarAccess.getRegularAccess().getCommaKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeTypeAssignment_2()); }
	(rule__Attribute__AttributeTypeAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getAttributeTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__0__Impl
	rule__Enumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getNameAssignment_0()); }
	(rule__Enumeration__NameAssignment_0)
	{ after(grammarAccess.getEnumerationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__1__Impl
	rule__Enumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getIsAKeyword_1()); }
	'isA'
	{ after(grammarAccess.getEnumerationAccess().getIsAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__2__Impl
	rule__Enumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getEnumerationKeyword_2()); }
	'Enumeration'
	{ after(grammarAccess.getEnumerationAccess().getEnumerationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__3__Impl
	rule__Enumeration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getEnumerationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__4__Impl
	rule__Enumeration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getGroup_4()); }
	(rule__Enumeration__Group_4__0)*
	{ after(grammarAccess.getEnumerationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__5__Impl
	rule__Enumeration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getEnumerationItemsAssignment_5()); }
	(rule__Enumeration__EnumerationItemsAssignment_5)
	{ after(grammarAccess.getEnumerationAccess().getEnumerationItemsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getEnumerationAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enumeration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group_4__0__Impl
	rule__Enumeration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getEnumerationItemsAssignment_4_0()); }
	(rule__Enumeration__EnumerationItemsAssignment_4_0)
	{ after(grammarAccess.getEnumerationAccess().getEnumerationItemsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enumeration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationAccess().getCommaKeyword_4_1()); }
	','
	{ after(grammarAccess.getEnumerationAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItem__Group__0__Impl
	rule__EnumItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemAccess().getEnumItemAction_0()); }
	()
	{ after(grammarAccess.getEnumItemAccess().getEnumItemAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemAccess().getNameAssignment_1()); }
	(rule__EnumItem__NameAssignment_1)
	{ after(grammarAccess.getEnumItemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclarPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarPair__Group__0__Impl
	rule__DeclarPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarPairAccess().getAttrAssignment_0()); }
	(rule__DeclarPair__AttrAssignment_0)
	{ after(grammarAccess.getDeclarPairAccess().getAttrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarPair__Group__1__Impl
	rule__DeclarPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarPairAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getDeclarPairAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclarPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarPairAccess().getParamAssignment_2()); }
	(rule__DeclarPair__ParamAssignment_2)
	{ after(grammarAccess.getDeclarPairAccess().getParamAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__0__Impl
	rule__Declar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getNameAssignment_0()); }
	(rule__Declar__NameAssignment_0)
	{ after(grammarAccess.getDeclarAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__1__Impl
	rule__Declar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDeclarAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__2__Impl
	rule__Declar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getTypeAssignment_2()); }
	(rule__Declar__TypeAssignment_2)
	{ after(grammarAccess.getDeclarAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__3__Impl
	rule__Declar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getWithKeyword_3()); }
	'with'
	{ after(grammarAccess.getDeclarAccess().getWithKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__4__Impl
	rule__Declar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getGroup_4()); }
	(rule__Declar__Group_4__0)*
	{ after(grammarAccess.getDeclarAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getAttributesAssignment_5()); }
	(rule__Declar__AttributesAssignment_5)
	{ after(grammarAccess.getDeclarAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declar__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group_4__0__Impl
	rule__Declar__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getAttributesAssignment_4_0()); }
	(rule__Declar__AttributesAssignment_4_0)
	{ after(grammarAccess.getDeclarAccess().getAttributesAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declar__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarAccess().getCommaKeyword_4_1()); }
	','
	{ after(grammarAccess.getDeclarAccess().getCommaKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__0__Impl
	rule__Obligation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getNameAssignment_0()); }
	(rule__Obligation__NameAssignment_0)
	{ after(grammarAccess.getObligationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__1__Impl
	rule__Obligation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getObligationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__2__Impl
	rule__Obligation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getGroup_2()); }
	(rule__Obligation__Group_2__0)?
	{ after(grammarAccess.getObligationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__3__Impl
	rule__Obligation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getObligationKeyword_3()); }
	'obligation'
	{ after(grammarAccess.getObligationAccess().getObligationKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__4__Impl
	rule__Obligation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getObligationAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__5__Impl
	rule__Obligation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getRole1Assignment_5()); }
	(rule__Obligation__Role1Assignment_5)
	{ after(grammarAccess.getObligationAccess().getRole1Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__6__Impl
	rule__Obligation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getObligationAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__7__Impl
	rule__Obligation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getRole2Assignment_7()); }
	(rule__Obligation__Role2Assignment_7)
	{ after(grammarAccess.getObligationAccess().getRole2Assignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__8__Impl
	rule__Obligation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getCommaKeyword_8()); }
	','
	{ after(grammarAccess.getObligationAccess().getCommaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__9__Impl
	rule__Obligation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getAntecedentAssignment_9()); }
	(rule__Obligation__AntecedentAssignment_9)
	{ after(grammarAccess.getObligationAccess().getAntecedentAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__10__Impl
	rule__Obligation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getObligationAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__11__Impl
	rule__Obligation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getConsequentAssignment_11()); }
	(rule__Obligation__ConsequentAssignment_11)
	{ after(grammarAccess.getObligationAccess().getConsequentAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getObligationAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Obligation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group_2__0__Impl
	rule__Obligation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getTriggerAssignment_2_0()); }
	(rule__Obligation__TriggerAssignment_2_0)
	{ after(grammarAccess.getObligationAccess().getTriggerAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Obligation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObligationAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
	'->'
	{ after(grammarAccess.getObligationAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__0__Impl
	rule__Power__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getNameAssignment_0()); }
	(rule__Power__NameAssignment_0)
	{ after(grammarAccess.getPowerAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__1__Impl
	rule__Power__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPowerAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__2__Impl
	rule__Power__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getGroup_2()); }
	(rule__Power__Group_2__0)?
	{ after(grammarAccess.getPowerAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__3__Impl
	rule__Power__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getPowerKeyword_3()); }
	'power'
	{ after(grammarAccess.getPowerAccess().getPowerKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__4__Impl
	rule__Power__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getPowerAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__5__Impl
	rule__Power__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getRole1Assignment_5()); }
	(rule__Power__Role1Assignment_5)
	{ after(grammarAccess.getPowerAccess().getRole1Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__6__Impl
	rule__Power__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getPowerAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__7__Impl
	rule__Power__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getRole2Assignment_7()); }
	(rule__Power__Role2Assignment_7)
	{ after(grammarAccess.getPowerAccess().getRole2Assignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__8__Impl
	rule__Power__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getCommaKeyword_8()); }
	','
	{ after(grammarAccess.getPowerAccess().getCommaKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__9__Impl
	rule__Power__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getAntecedentAssignment_9()); }
	(rule__Power__AntecedentAssignment_9)
	{ after(grammarAccess.getPowerAccess().getAntecedentAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__10__Impl
	rule__Power__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getPowerAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__11__Impl
	rule__Power__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getConsequentAssignment_11()); }
	(rule__Power__ConsequentAssignment_11)
	{ after(grammarAccess.getPowerAccess().getConsequentAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getPowerAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Power__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group_2__0__Impl
	rule__Power__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getTriggerAssignment_2_0()); }
	(rule__Power__TriggerAssignment_2_0)
	{ after(grammarAccess.getPowerAccess().getTriggerAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Power__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
	'->'
	{ after(grammarAccess.getPowerAccess().getHyphenMinusGreaterThanSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proposition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group__0__Impl
	rule__Proposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getJunctionsAssignment_0()); }
	(rule__Proposition__JunctionsAssignment_0)
	{ after(grammarAccess.getPropositionAccess().getJunctionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getGroup_1()); }
	(rule__Proposition__Group_1__0)*
	{ after(grammarAccess.getPropositionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proposition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1__0__Impl
	rule__Proposition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getORKeyword_1_0()); }
	'OR'
	{ after(grammarAccess.getPropositionAccess().getORKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getJunctionsAssignment_1_1()); }
	(rule__Proposition__JunctionsAssignment_1_1)
	{ after(grammarAccess.getPropositionAccess().getJunctionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Junction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Junction__Group__0__Impl
	rule__Junction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJunctionAccess().getNegativeAtomsAssignment_0()); }
	(rule__Junction__NegativeAtomsAssignment_0)
	{ after(grammarAccess.getJunctionAccess().getNegativeAtomsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Junction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJunctionAccess().getGroup_1()); }
	(rule__Junction__Group_1__0)*
	{ after(grammarAccess.getJunctionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Junction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Junction__Group_1__0__Impl
	rule__Junction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJunctionAccess().getANDKeyword_1_0()); }
	'AND'
	{ after(grammarAccess.getJunctionAccess().getANDKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Junction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJunctionAccess().getNegativeAtomsAssignment_1_1()); }
	(rule__Junction__NegativeAtomsAssignment_1_1)
	{ after(grammarAccess.getJunctionAccess().getNegativeAtomsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group__0__Impl
	rule__Negation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getNegatedAssignment_0()); }
	(rule__Negation__NegatedAssignment_0)?
	{ after(grammarAccess.getNegationAccess().getNegatedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getAtomicExpressionAssignment_1()); }
	(rule__Negation__AtomicExpressionAssignment_1)
	{ after(grammarAccess.getNegationAccess().getAtomicExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__0__Impl
	rule__Atom__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getHappensKeyword_0_0()); }
	'happens'
	{ after(grammarAccess.getAtomAccess().getHappensKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__1__Impl
	rule__Atom__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__2__Impl
	rule__Atom__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getEventPropositionAssignment_0_2()); }
	(rule__Atom__EventPropositionAssignment_0_2)
	{ after(grammarAccess.getAtomAccess().getEventPropositionAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__0__Impl
	rule__Atom__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getOccursKeyword_1_0()); }
	'occurs'
	{ after(grammarAccess.getAtomAccess().getOccursKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__1__Impl
	rule__Atom__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__2__Impl
	rule__Atom__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getSituationPropositionAssignment_1_2()); }
	(rule__Atom__SituationPropositionAssignment_1_2)
	{ after(grammarAccess.getAtomAccess().getSituationPropositionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__0__Impl
	rule__Atom__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getPointAssignment_2_0()); }
	(rule__Atom__PointAssignment_2_0)
	{ after(grammarAccess.getAtomAccess().getPointAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__1__Impl
	rule__Atom__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getWithinKeyword_2_1()); }
	'within'
	{ after(grammarAccess.getAtomAccess().getWithinKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atom__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomAccess().getIntervalAssignment_2_2()); }
	(rule__Atom__IntervalAssignment_2_2)
	{ after(grammarAccess.getAtomAccess().getIntervalAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SitProp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitProp__Group__0__Impl
	rule__SitProp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitPropAccess().getAlternatives_0()); }
	(rule__SitProp__Alternatives_0)
	{ after(grammarAccess.getSitPropAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitProp__Group__1__Impl
	rule__SitProp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitPropAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getSitPropAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SitProp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSitPropAccess().getIntervalAssignment_2()); }
	(rule__SitProp__IntervalAssignment_2)
	{ after(grammarAccess.getSitPropAccess().getIntervalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventProp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventProp__Group__0__Impl
	rule__EventProp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPropAccess().getAlternatives_0()); }
	(rule__EventProp__Alternatives_0)
	{ after(grammarAccess.getEventPropAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventProp__Group__1__Impl
	rule__EventProp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPropAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getEventPropAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventProp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPropAccess().getPointAssignment_2()); }
	(rule__EventProp__PointAssignment_2)
	{ after(grammarAccess.getEventPropAccess().getPointAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__0__Impl
	rule__Interval__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getIntervalAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__1__Impl
	rule__Interval__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getStartAssignment_1_1()); }
	(rule__Interval__StartAssignment_1_1)
	{ after(grammarAccess.getIntervalAccess().getStartAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__2__Impl
	rule__Interval__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getCommaKeyword_1_2()); }
	','
	{ after(grammarAccess.getIntervalAccess().getCommaKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__3__Impl
	rule__Interval__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getEndAssignment_1_3()); }
	(rule__Interval__EndAssignment_1_3)
	{ after(grammarAccess.getIntervalAccess().getEndAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_1_4()); }
	']'
	{ after(grammarAccess.getIntervalAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interval__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__0__Impl
	rule__Interval__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getSituationNameAssignment_3_0()); }
	(rule__Interval__SituationNameAssignment_3_0)
	{ after(grammarAccess.getIntervalAccess().getSituationNameAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__1__Impl
	rule__Interval__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getTempOpAssignment_3_1()); }
	(rule__Interval__TempOpAssignment_3_1)
	{ after(grammarAccess.getIntervalAccess().getTempOpAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__2__Impl
	rule__Interval__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getIntConstAssignment_3_2()); }
	(rule__Interval__IntConstAssignment_3_2)
	{ after(grammarAccess.getIntervalAccess().getIntConstAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interval__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntervalAccess().getUnitAssignment_3_3()); }
	(rule__Interval__UnitAssignment_3_3)
	{ after(grammarAccess.getIntervalAccess().getUnitAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntConst__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntConst__Group__0__Impl
	rule__IntConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntConstAccess().getIntConstAction_0()); }
	()
	{ after(grammarAccess.getIntConstAccess().getIntConstAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntConstAccess().getTypeAssignment_1()); }
	(rule__IntConst__TypeAssignment_1)
	{ after(grammarAccess.getIntConstAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_3__0__Impl
	rule__Point__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getPointConstAssignment_3_0()); }
	(rule__Point__PointConstAssignment_3_0)
	{ after(grammarAccess.getPointAccess().getPointConstAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_3__1__Impl
	rule__Point__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getUnitAssignment_3_1()); }
	(rule__Point__UnitAssignment_3_1)
	{ after(grammarAccess.getPointAccess().getUnitAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_3__2__Impl
	rule__Point__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getTempOpAssignment_3_2()); }
	(rule__Point__TempOpAssignment_3_2)
	{ after(grammarAccess.getPointAccess().getTempOpAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getEventNameAssignment_3_3()); }
	(rule__Point__EventNameAssignment_3_3)
	{ after(grammarAccess.getPointAccess().getEventNameAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PEvent__Group__0__Impl
	rule__PEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPEventAccess().getPowEventAssignment_0()); }
	(rule__PEvent__PowEventAssignment_0)
	{ after(grammarAccess.getPEventAccess().getPowEventAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PEvent__Group__1__Impl
	rule__PEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPEventAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPEventAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PEvent__Group__2__Impl
	rule__PEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPEventAccess().getPowNameAssignment_2()); }
	(rule__PEvent__PowNameAssignment_2)
	{ after(grammarAccess.getPEventAccess().getPowNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPEventAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPEventAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CEvent__Group__0__Impl
	rule__CEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCEventAccess().getContrEventAssignment_0()); }
	(rule__CEvent__ContrEventAssignment_0)
	{ after(grammarAccess.getCEventAccess().getContrEventAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CEvent__Group__1__Impl
	rule__CEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCEventAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCEventAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CEvent__Group__2__Impl
	rule__CEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCEventAccess().getContrNameAssignment_2()); }
	(rule__CEvent__ContrNameAssignment_2)
	{ after(grammarAccess.getCEventAccess().getContrNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCEventAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCEventAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OEvent__Group__0__Impl
	rule__OEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOEventAccess().getOblEventAssignment_0()); }
	(rule__OEvent__OblEventAssignment_0)
	{ after(grammarAccess.getOEventAccess().getOblEventAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OEvent__Group__1__Impl
	rule__OEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOEventAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOEventAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OEvent__Group__2__Impl
	rule__OEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOEventAccess().getOblNameAssignment_2()); }
	(rule__OEvent__OblNameAssignment_2)
	{ after(grammarAccess.getOEventAccess().getOblNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OEvent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOEventAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOEventAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PointConst__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointConst__Group__0__Impl
	rule__PointConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PointConst__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointConstAccess().getPointConstAction_0()); }
	()
	{ after(grammarAccess.getPointConstAccess().getPointConstAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointConst__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PointConst__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PointConst__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointConstAccess().getTypeAssignment_1()); }
	(rule__PointConst__TypeAssignment_1)
	{ after(grammarAccess.getPointConstAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OState__Group__0__Impl
	rule__OState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOStateAccess().getOblStateAssignment_0()); }
	(rule__OState__OblStateAssignment_0)
	{ after(grammarAccess.getOStateAccess().getOblStateAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OState__Group__1__Impl
	rule__OState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOStateAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOStateAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OState__Group__2__Impl
	rule__OState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOStateAccess().getOblNameAssignment_2()); }
	(rule__OState__OblNameAssignment_2)
	{ after(grammarAccess.getOStateAccess().getOblNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOStateAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOStateAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CState__Group__0__Impl
	rule__CState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCStateAccess().getContrStateAssignment_0()); }
	(rule__CState__ContrStateAssignment_0)
	{ after(grammarAccess.getCStateAccess().getContrStateAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CState__Group__1__Impl
	rule__CState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCStateAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCStateAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CState__Group__2__Impl
	rule__CState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCStateAccess().getContractNameAssignment_2()); }
	(rule__CState__ContractNameAssignment_2)
	{ after(grammarAccess.getCStateAccess().getContractNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCStateAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getCStateAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PState__Group__0__Impl
	rule__PState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPStateAccess().getPowStateAssignment_0()); }
	(rule__PState__PowStateAssignment_0)
	{ after(grammarAccess.getPStateAccess().getPowStateAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PState__Group__1__Impl
	rule__PState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPStateAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPStateAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PState__Group__2__Impl
	rule__PState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPStateAccess().getPowNameAssignment_2()); }
	(rule__PState__PowNameAssignment_2)
	{ after(grammarAccess.getPStateAccess().getPowNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PState__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPStateAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPStateAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DomainNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDomainNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getDomainNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DomainConceptsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDomainConceptsDomainConceptParserRuleCall_2_0_0()); }
		ruleDomainConcept
		{ after(grammarAccess.getModelAccess().getDomainConceptsDomainConceptParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ContractNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getContractNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getContractNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ParametersAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_7_0_0()); }
		ruleParameter
		{ after(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ParametersAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_8_0()); }
		ruleParameter
		{ after(grammarAccess.getModelAccess().getParametersParameterParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclarationsAssignment_10_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclarationsDeclarParserRuleCall_10_1_0_0()); }
		ruleDeclar
		{ after(grammarAccess.getModelAccess().getDeclarationsDeclarParserRuleCall_10_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PreconditionsAssignment_11_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPreconditionsPropositionParserRuleCall_11_1_0_0()); }
		ruleProposition
		{ after(grammarAccess.getModelAccess().getPreconditionsPropositionParserRuleCall_11_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PostconditionsAssignment_12_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPostconditionsPropositionParserRuleCall_12_1_0_0()); }
		ruleProposition
		{ after(grammarAccess.getModelAccess().getPostconditionsPropositionParserRuleCall_12_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ObligationsAssignment_13_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getObligationsObligationParserRuleCall_13_1_0_0()); }
		ruleObligation
		{ after(grammarAccess.getModelAccess().getObligationsObligationParserRuleCall_13_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SobligationsAssignment_14_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSobligationsObligationParserRuleCall_14_2_0_0()); }
		ruleObligation
		{ after(grammarAccess.getModelAccess().getSobligationsObligationParserRuleCall_14_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PowersAssignment_15_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPowersPowerParserRuleCall_15_1_0_0()); }
		rulePower
		{ after(grammarAccess.getModelAccess().getPowersPowerParserRuleCall_15_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ConstraintsAssignment_16_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConstraintsPropositionParserRuleCall_16_1_0_0()); }
		ruleProposition
		{ after(grammarAccess.getModelAccess().getConstraintsPropositionParserRuleCall_16_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRegularAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__ConceptTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAccess().getConceptTypeCTypeParserRuleCall_2_0()); }
		ruleCType
		{ after(grammarAccess.getRegularAccess().getConceptTypeCTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__AttributesAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_1_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regular__AttributesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getRegularAccess().getAttributesAttributeParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__AttributeTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getAttributeTypeCTypeParserRuleCall_2_0()); }
		ruleCType
		{ after(grammarAccess.getAttributeAccess().getAttributeTypeCTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__EnumerationItemsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_4_0_0()); }
		ruleenumItem
		{ after(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumeration__EnumerationItemsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_5_0()); }
		ruleenumItem
		{ after(grammarAccess.getEnumerationAccess().getEnumerationItemsEnumItemParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainType__SuperTypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainTypeAccess().getSuperTypeDomainConceptCrossReference_0()); }
		(
			{ before(grammarAccess.getDomainTypeAccess().getSuperTypeDomainConceptIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDomainTypeAccess().getSuperTypeDomainConceptIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getDomainTypeAccess().getSuperTypeDomainConceptCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTypeAccess().getNameAlternatives_0()); }
		(rule__BasicType__NameAlternatives_0)
		{ after(grammarAccess.getBasicTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OntoCType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOntoCTypeAccess().getNameAlternatives_0()); }
		(rule__OntoCType__NameAlternatives_0)
		{ after(grammarAccess.getOntoCTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeNameParserRuleCall_2_0()); }
		ruleTypeName
		{ after(grammarAccess.getParameterAccess().getTypeTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__AttrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarPairAccess().getAttrIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarPairAccess().getAttrIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclarPair__ParamAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarPairAccess().getParamIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarPairAccess().getParamIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarAccess().getTypeRegularCrossReference_2_0()); }
		(
			{ before(grammarAccess.getDeclarAccess().getTypeRegularIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDeclarAccess().getTypeRegularIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getDeclarAccess().getTypeRegularCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__AttributesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_4_0_0()); }
		ruleDeclarPair
		{ after(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declar__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_5_0()); }
		ruleDeclarPair
		{ after(grammarAccess.getDeclarAccess().getAttributesDeclarPairParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getObligationAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__TriggerAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getTriggerPropositionParserRuleCall_2_0_0()); }
		ruleProposition
		{ after(grammarAccess.getObligationAccess().getTriggerPropositionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Role1Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getRole1IDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getObligationAccess().getRole1IDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__Role2Assignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getRole2IDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getObligationAccess().getRole2IDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__AntecedentAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getAntecedentPropositionParserRuleCall_9_0()); }
		ruleProposition
		{ after(grammarAccess.getObligationAccess().getAntecedentPropositionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Obligation__ConsequentAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObligationAccess().getConsequentPropositionParserRuleCall_11_0()); }
		ruleProposition
		{ after(grammarAccess.getObligationAccess().getConsequentPropositionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPowerAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__TriggerAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getTriggerPropositionParserRuleCall_2_0_0()); }
		ruleProposition
		{ after(grammarAccess.getPowerAccess().getTriggerPropositionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Role1Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getRole1IDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getPowerAccess().getRole1IDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__Role2Assignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getRole2IDTerminalRuleCall_7_0()); }
		RULE_ID
		{ after(grammarAccess.getPowerAccess().getRole2IDTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__AntecedentAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getAntecedentPropositionParserRuleCall_9_0()); }
		ruleProposition
		{ after(grammarAccess.getPowerAccess().getAntecedentPropositionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Power__ConsequentAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerAccess().getConsequentPropositionParserRuleCall_11_0()); }
		ruleProposition
		{ after(grammarAccess.getPowerAccess().getConsequentPropositionParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__JunctionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_0_0()); }
		ruleJunction
		{ after(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__JunctionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_1_1_0()); }
		ruleJunction
		{ after(grammarAccess.getPropositionAccess().getJunctionsJunctionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__NegativeAtomsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_0_0()); }
		ruleNegation
		{ after(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__NegativeAtomsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_1_1_0()); }
		ruleNegation
		{ after(grammarAccess.getJunctionAccess().getNegativeAtomsNegationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__NegatedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getNegatedNOTKeyword_0_0()); }
		(
			{ before(grammarAccess.getNegationAccess().getNegatedNOTKeyword_0_0()); }
			'NOT'
			{ after(grammarAccess.getNegationAccess().getNegatedNOTKeyword_0_0()); }
		)
		{ after(grammarAccess.getNegationAccess().getNegatedNOTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__AtomicExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getAtomicExpressionAtomParserRuleCall_1_0()); }
		ruleAtom
		{ after(grammarAccess.getNegationAccess().getAtomicExpressionAtomParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__EventPropositionAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getEventPropositionEventPropParserRuleCall_0_2_0()); }
		ruleEventProp
		{ after(grammarAccess.getAtomAccess().getEventPropositionEventPropParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__SituationPropositionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getSituationPropositionSitPropParserRuleCall_1_2_0()); }
		ruleSitProp
		{ after(grammarAccess.getAtomAccess().getSituationPropositionSitPropParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__PointAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getPointPointParserRuleCall_2_0_0()); }
		rulePoint
		{ after(grammarAccess.getAtomAccess().getPointPointParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__IntervalAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getIntervalIntervalParserRuleCall_2_2_0()); }
		ruleInterval
		{ after(grammarAccess.getAtomAccess().getIntervalIntervalParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__BoolAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getBoolTRUEKeyword_3_0()); }
		(
			{ before(grammarAccess.getAtomAccess().getBoolTRUEKeyword_3_0()); }
			'TRUE'
			{ after(grammarAccess.getAtomAccess().getBoolTRUEKeyword_3_0()); }
		)
		{ after(grammarAccess.getAtomAccess().getBoolTRUEKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__BoolAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomAccess().getBoolFALSEKeyword_4_0()); }
		(
			{ before(grammarAccess.getAtomAccess().getBoolFALSEKeyword_4_0()); }
			'FALSE'
			{ after(grammarAccess.getAtomAccess().getBoolFALSEKeyword_4_0()); }
		)
		{ after(grammarAccess.getAtomAccess().getBoolFALSEKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__SituationNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getSituationNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSitPropAccess().getSituationNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__OSituationNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getOSituationNameOStateParserRuleCall_0_1_0()); }
		ruleoState
		{ after(grammarAccess.getSitPropAccess().getOSituationNameOStateParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__CSituationNameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getCSituationNameCStateParserRuleCall_0_2_0()); }
		rulecState
		{ after(grammarAccess.getSitPropAccess().getCSituationNameCStateParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__PSituationNameAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getPSituationNamePStateParserRuleCall_0_3_0()); }
		rulepState
		{ after(grammarAccess.getSitPropAccess().getPSituationNamePStateParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitProp__IntervalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitPropAccess().getIntervalIntervalParserRuleCall_2_0()); }
		ruleInterval
		{ after(grammarAccess.getSitPropAccess().getIntervalIntervalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__EventNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getEventNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEventPropAccess().getEventNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__OEventNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getOEventNameOEventParserRuleCall_0_1_0()); }
		ruleoEvent
		{ after(grammarAccess.getEventPropAccess().getOEventNameOEventParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__CEventNameAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getCEventNameCEventParserRuleCall_0_2_0()); }
		rulecEvent
		{ after(grammarAccess.getEventPropAccess().getCEventNameCEventParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__PEventNameAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getPEventNamePEventParserRuleCall_0_3_0()); }
		rulepEvent
		{ after(grammarAccess.getEventPropAccess().getPEventNamePEventParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventProp__PointAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPropAccess().getPointPointParserRuleCall_2_0()); }
		rulePoint
		{ after(grammarAccess.getEventPropAccess().getPointPointParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__SituationNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_0_0()); }
		ruleSitName
		{ after(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__StartAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getStartPointParserRuleCall_1_1_0()); }
		rulePoint
		{ after(grammarAccess.getIntervalAccess().getStartPointParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__EndAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getEndPointParserRuleCall_1_3_0()); }
		rulePoint
		{ after(grammarAccess.getIntervalAccess().getEndPointParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UnnamedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUnnamedUNNAMED_INTERVALKeyword_2_0()); }
		(
			{ before(grammarAccess.getIntervalAccess().getUnnamedUNNAMED_INTERVALKeyword_2_0()); }
			'UNNAMED_INTERVAL'
			{ after(grammarAccess.getIntervalAccess().getUnnamedUNNAMED_INTERVALKeyword_2_0()); }
		)
		{ after(grammarAccess.getIntervalAccess().getUnnamedUNNAMED_INTERVALKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__SituationNameAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_3_0_0()); }
		ruleSitName
		{ after(grammarAccess.getIntervalAccess().getSituationNameSitNameParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__TempOpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getTempOpTempOpParserRuleCall_3_1_0()); }
		ruleTempOp
		{ after(grammarAccess.getIntervalAccess().getTempOpTempOpParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__IntConstAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getIntConstIntConstParserRuleCall_3_2_0()); }
		ruleIntConst
		{ after(grammarAccess.getIntervalAccess().getIntConstIntConstParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interval__UnitAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntervalAccess().getUnitUnitParserRuleCall_3_3_0()); }
		ruleUnit
		{ after(grammarAccess.getIntervalAccess().getUnitUnitParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__SitNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getSitNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSitNameAccess().getSitNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__OStateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getOStateOStateParserRuleCall_1_0()); }
		ruleoState
		{ after(grammarAccess.getSitNameAccess().getOStateOStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__PStateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getPStatePStateParserRuleCall_2_0()); }
		rulepState
		{ after(grammarAccess.getSitNameAccess().getPStatePStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__CStateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getCStateCStateParserRuleCall_3_0()); }
		rulecState
		{ after(grammarAccess.getSitNameAccess().getCStateCStateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__OEventAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getOEventOEventParserRuleCall_4_0()); }
		ruleoEvent
		{ after(grammarAccess.getSitNameAccess().getOEventOEventParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__CEventAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getCEventCEventParserRuleCall_5_0()); }
		rulecEvent
		{ after(grammarAccess.getSitNameAccess().getCEventCEventParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SitName__PEventAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSitNameAccess().getPEventPEventParserRuleCall_6_0()); }
		rulepEvent
		{ after(grammarAccess.getSitNameAccess().getPEventPEventParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntConst__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntConstAccess().getTypeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntConstAccess().getTypeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__EventNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_0_0()); }
		ruleSitName
		{ after(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__UnnamedAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getUnnamedUNNAMED_POINTKeyword_1_0()); }
		(
			{ before(grammarAccess.getPointAccess().getUnnamedUNNAMED_POINTKeyword_1_0()); }
			'UNNAMED_POINT'
			{ after(grammarAccess.getPointAccess().getUnnamedUNNAMED_POINTKeyword_1_0()); }
		)
		{ after(grammarAccess.getPointAccess().getUnnamedUNNAMED_POINTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__PointConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_2_0()); }
		rulePointConst
		{ after(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__PointConstAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_3_0_0()); }
		rulePointConst
		{ after(grammarAccess.getPointAccess().getPointConstPointConstParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__UnitAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getUnitUnitParserRuleCall_3_1_0()); }
		ruleUnit
		{ after(grammarAccess.getPointAccess().getUnitUnitParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__TempOpAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getTempOpTempOpParserRuleCall_3_2_0()); }
		ruleTempOp
		{ after(grammarAccess.getPointAccess().getTempOpTempOpParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__EventNameAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_3_3_0()); }
		ruleSitName
		{ after(grammarAccess.getPointAccess().getEventNameSitNameParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__PowEventAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPEventAccess().getPowEventPowEventParserRuleCall_0_0()); }
		rulePowEvent
		{ after(grammarAccess.getPEventAccess().getPowEventPowEventParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PEvent__PowNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPEventAccess().getPowNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPEventAccess().getPowNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__ContrEventAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCEventAccess().getContrEventContrEventParserRuleCall_0_0()); }
		ruleContrEvent
		{ after(grammarAccess.getCEventAccess().getContrEventContrEventParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CEvent__ContrNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCEventAccess().getContrNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCEventAccess().getContrNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__OblEventAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOEventAccess().getOblEventOblEventParserRuleCall_0_0()); }
		ruleOblEvent
		{ after(grammarAccess.getOEventAccess().getOblEventOblEventParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OEvent__OblNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOEventAccess().getOblNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOEventAccess().getOblNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PointConst__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointConstAccess().getTypeINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPointConstAccess().getTypeINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__OblStateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOStateAccess().getOblStateOblStateParserRuleCall_0_0()); }
		ruleOblState
		{ after(grammarAccess.getOStateAccess().getOblStateOblStateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OState__OblNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOStateAccess().getOblNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getOStateAccess().getOblNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__ContrStateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCStateAccess().getContrStateContrStateParserRuleCall_0_0()); }
		ruleContrState
		{ after(grammarAccess.getCStateAccess().getContrStateContrStateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CState__ContractNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCStateAccess().getContractNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCStateAccess().getContractNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__PowStateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPStateAccess().getPowStatePowStateParserRuleCall_0_0()); }
		rulePowState
		{ after(grammarAccess.getPStateAccess().getPowStatePowStateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PState__PowNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPStateAccess().getPowNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPStateAccess().getPowNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
